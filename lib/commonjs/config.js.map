{"version":3,"sources":["../../src/config.js"],"names":["validatorHandlers","mapOfValidators","transformerHandlers","mapOfTransformers","formatName","name","left","context","custom","fullName","path","makePath","messages","nameOfValue","mapOfNames","formatKey","key","hasPrefix","Number","isInteger","prefix","formatPath","getChildContext","currentValue","childKey","childValue","$$PARENT","$$CURRENT","$$KEY","SYNTAX_OP_NOT_ALONE","SYNTAX_INVALID_EXPR","expr","JSON","stringify","SYNTAX_INVALID_OP","op","SYNTAX_NUMBER_AS_EXPR","INVALID_TRANSFORMER_OP","UNSUPPORTED_VALIDATION_OP","INVALID_COLLECTION_OP","INVALID_TRANSFORMER_HANDLER","tag","INVALID_TEST_HANLDER","INVALID_OP_EXPR","right","INVALID_COLLECTION_OP_EXPR","collectionOp","UNSUPPORTED_TYPE","type","OPERAND_NOT_TUPLE","OPERAND_NOT_TUPLE_2_OR_3","OPERAND_NOT_ARRAY","OPERAND_NOT_BOOL","OPERAND_NOT_STRING","OPERAND_NOT_OBJECT","VALUE_NOT_ARRAY","VALUE_NOT_COLLECTION","VALUE_NOT_PRIMITIVE","VALUE_NOT_STRING","VALUE_NOT_OBJECT","REQUIRE_RIGHT_OPERAND","RIGHT_OPERAND_NOT_EMPTY","MULTI_ERRORS","numErrors","config","dump","console","log","Object","keys","dev","process","env","NODE_ENV","addValidatorToMap","tokens","handler","alias","forEach","Error","addTransformerToMap","isUnary","overrideTransformer","overrideValidator","getValidatorTag","getValidator","getTransformerTagAndType","getTransformer","loadMessages","moreMessages","assign"],"mappings":"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","sourcesContent":["const validatorHandlers = {};\nconst mapOfValidators = {};\n\nconst transformerHandlers = {};\nconst mapOfTransformers = {};\n\nconst formatName = (name, left, context, custom) => {\n    const fullName = name == null ? context.path : makePath(name, context?.path);\n    return fullName == null\n        ? messages.nameOfValue(custom)\n        : context?.mapOfNames\n        ? context.mapOfNames[fullName]\n        : fullName;\n};\n\nconst formatKey = (key, hasPrefix) => (Number.isInteger(key) ? `[${key}]` : hasPrefix ? '.' + key : key);\nconst makePath = (key, prefix) => (prefix != null ? `${prefix}${formatKey(key, true)}` : formatKey(key, false));\nconst formatPath = (prefix) => (prefix ? '[' + prefix + ']' : '<ROOT>');\n\nexport const getChildContext = (context, currentValue, childKey, childValue) => ({\n    ...context,\n    path: makePath(childKey, context.path),\n    $$PARENT: currentValue,\n    $$CURRENT: childValue,\n    $$KEY: childKey,\n});\n\nexport const messages = {\n    formatName,\n    formatKey,\n    makePath,\n\n    //Exception messages\n    SYNTAX_OP_NOT_ALONE: 'Transformer operator can only be used alone in one pipeline stage.',\n    SYNTAX_INVALID_EXPR: (expr) => `Invalid expression syntax: ${JSON.stringify(expr)}`, // complext expr, not split out operator yet\n    SYNTAX_INVALID_OP: (op, prefix) => `Invalid operator \"${op}\" at ${formatPath(prefix)}.`,\n    SYNTAX_NUMBER_AS_EXPR: 'Number value cannot be used as a transformer expression.',\n\n    INVALID_TRANSFORMER_OP: (op) => `Invalid transformer operator \"${op}\".`,\n    UNSUPPORTED_VALIDATION_OP: (op, prefix) => `Unsupported validation operator \"${op}\" at ${formatPath(prefix)}.`,\n    INVALID_COLLECTION_OP: (op) => `Invalid collection operator \"${op}\".`,\n\n    INVALID_TRANSFORMER_HANDLER: (tag) => `Handler for transformer \"${tag}\" not found.`,\n    INVALID_TEST_HANLDER: (tag) => `Handler for validator \"${tag}\" not found.`,\n\n    INVALID_OP_EXPR: (op, right) => `Invalid \"${op}\" expression: ${JSON.stringify(right)}.`,\n    INVALID_COLLECTION_OP_EXPR: (collectionOp, op, right) =>\n        `Invalid \"${op}\" expression for collection \"${collectionOp}\" traversing: ${JSON.stringify(right)}.`,\n    UNSUPPORTED_TYPE: (type) => `Supported type \"${type}\".`,\n\n    OPERAND_NOT_TUPLE: (op) =>\n        `The right operand of a collection operator ${op ? '\"' + op + '\" ' : ''}must be a two-tuple.`,\n    OPERAND_NOT_TUPLE_2_OR_3: (op) => `The right operand of a \"${op}\" operator must be either a 2-tuple or a 3-tuple.`,\n    OPERAND_NOT_ARRAY: (op) => `The right operand of a \"${op}\" operator must be an array.`,\n    OPERAND_NOT_BOOL: (op) => `The right operand of a \"${op}\" operator must be a boolean value.`,\n    OPERAND_NOT_STRING: (op) => `The right operand of a \"${op}\" operator must be a string.`,\n    OPERAND_NOT_OBJECT: (op) => `The right operand of a \"${op}\" operator must be an object.`,\n\n    VALUE_NOT_ARRAY: (op) => `The value to take a \"${op}\" operator must be an array.`,\n    VALUE_NOT_COLLECTION: (op) => `The value to take a \"${op}\" operator must be either an object or an array.`,\n    VALUE_NOT_PRIMITIVE: (op) => `The value to take a \"${op}\" operator must be a primitive value, e.g. string, number.`,\n    VALUE_NOT_STRING: (op) => `The value to take a \"${op}\" operator must be a string.`,\n    VALUE_NOT_OBJECT: (op) => `The value to take a \"${op}\" operator must be an object.`,\n\n    REQUIRE_RIGHT_OPERAND: (op) => `Binary operator \"${op}\" requires a right operand.`,\n    RIGHT_OPERAND_NOT_EMPTY: (op) => `Unary operator \"${op}\" does not require a right operand.`,\n\n    MULTI_ERRORS: (numErrors) => `${numErrors} errors occurred.`,\n};\n\n//JSON Expression Syntax Runtime Configuration\nconst config = {\n    dump: () => {\n        console.log(Object.keys(validatorHandlers));\n    },\n    dev: process.env.NODE_ENV === 'development',\n    messages,\n    addValidatorToMap: (tokens, handler) => {\n        const [tag, ...alias] = tokens;\n\n        alias.forEach((op) => {\n            if (op in mapOfValidators) {\n                throw new Error(`Duplicate validator alias \"${op}\" for operator \"${tag}\".`);\n            }\n            mapOfValidators[op] = tag;\n        });\n\n        if (tag in validatorHandlers) {\n            throw new Error(`Duplicate operator name \"${tag}\".`);\n        }\n\n        validatorHandlers[tag] = handler;\n    },\n    addTransformerToMap: (tokens, handler) => {\n        const [tag, isUnary, ...alias] = tokens;\n\n        if (typeof isUnary !== 'boolean') {\n            throw new Error('The second param should be a boolean value.');\n        }\n\n        alias.forEach((op) => {\n            if (op in mapOfTransformers) {\n                throw new Error(`Duplicate transformer alias: \"${op}\" for operator \"${tag}\".`);\n            }\n            mapOfTransformers[op] = [tag, isUnary];\n        });\n\n        if (tag in transformerHandlers) {\n            throw new Error(`Duplicate operator name: \"${tag}\".`);\n        }\n\n        transformerHandlers[tag] = handler;\n    },\n    overrideTransformer: (tag, handler) => {\n        transformerHandlers[tag] = handler;\n    },\n    overrideValidator: (tag, handler) => {\n        validatorHandlers[tag] = handler;\n    },\n\n    getValidatorTag: (op) => mapOfValidators[op],\n    getValidator: (tag) => validatorHandlers[tag],\n\n    getTransformerTagAndType: (op) => mapOfTransformers[op],\n    getTransformer: (tag) => transformerHandlers[tag],\n    loadMessages: (moreMessages) => Object.assign(config.messages, moreMessages),\n};\n\nexport default config;\n"],"file":"config.js"}