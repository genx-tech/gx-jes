{"version":3,"sources":["../../../src/types/text.js"],"names":["name","alias","validate","value","schema","options","useFieldPath","abortEarly","throwError","context"],"mappings":";;;;;;;;;AAAA;;;;;;eAEe;AACXA,EAAAA,IAAI,EAAE,MADK;AAGXC,EAAAA,KAAK,EAAE,CAAC,QAAD,EAAW,MAAX,CAHI;AAKXC,EAAAA,QAAQ,EAAE,CAACC,KAAD,EAAQC,MAAR,EAAgBC,OAAO,GAAG;AAAEC,IAAAA,YAAY,EAAE,IAAhB;AAAsBC,IAAAA,UAAU,EAAE,IAAlC;AAAwCC,IAAAA,UAAU,EAAE;AAApD,GAA1B,EAAsFC,OAAO,GAAG,EAAhG,KAAuG;AAC7G,QAAIN,KAAK,IAAI,IAAT,IAAiB,OAAOA,KAAP,KAAiB,QAAtC,EAAgD;AAC5C,aAAO,2BAAYA,KAAZ,EAAmB,MAAnB,EAA2BE,OAA3B,EAAoCI,OAApC,CAAP;AACH;;AAED,QAAIL,MAAJ,EAAY;AACR,aAAO,uBAASD,KAAT,EAAgBC,MAAhB,EAAwBC,OAAxB,EAAiCI,OAAjC,CAAP;AACH;;AAED,WAAO,IAAP;AACH;AAfU,C","sourcesContent":["import validate, { invalidType } from '../validate';\n\nexport default {\n    name: 'text',\n\n    alias: ['string', 'char'],\n\n    validate: (value, schema, options = { useFieldPath: true, abortEarly: true, throwError: true }, context = {}) => {\n        if (value != null && typeof value !== 'string') {\n            return invalidType(value, 'text', options, context);\n        }\n\n        if (schema) {\n            return validate(value, schema, options, context);\n        }\n\n        return true;\n    },\n};\n"],"file":"text.js"}