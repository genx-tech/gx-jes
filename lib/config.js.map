{"version":3,"file":"config.js","names":["validatorHandlers","mapOfValidators","transformerHandlers","mapOfTransformers","formatName","name","left","context","custom","fullName","path","makePath","messages","nameOfValue","mapOfNames","formatKey","key","hasPrefix","Number","isInteger","prefix","formatPath","getChildContext","currentValue","childKey","childValue","$$PARENT","$$CURRENT","$$KEY","exports","SYNTAX_OP_NOT_ALONE","SYNTAX_INVALID_EXPR","expr","JSON","stringify","SYNTAX_INVALID_OP","op","SYNTAX_NUMBER_AS_EXPR","INVALID_TRANSFORMER_OP","UNSUPPORTED_VALIDATION_OP","INVALID_COLLECTION_OP","INVALID_TRANSFORMER_HANDLER","tag","INVALID_TEST_HANLDER","INVALID_OP_EXPR","right","expected","INVALID_COLLECTION_OP_EXPR","collectionOp","UNSUPPORTED_TYPE","type","OPERAND_NOT_TUPLE","OPERAND_NOT_TUPLE_2_OR_3","OPERAND_NOT_ARRAY","OPERAND_NOT_BOOL","OPERAND_NOT_STRING","OPERAND_NOT_OBJECT","VALUE_NOT_ARRAY","VALUE_NOT_COLLECTION","VALUE_NOT_PRIMITIVE","VALUE_NOT_STRING","VALUE_NOT_OBJECT","REQUIRE_RIGHT_OPERAND","RIGHT_OPERAND_NOT_EMPTY","MULTI_ERRORS","numErrors","config","addValidatorToMap","tokens","handler","alias","forEach","Error","addTransformerToMap","isUnary","overrideTransformer","overrideValidator","getValidatorTag","getValidator","getTransformerTagAndType","getTransformer","loadMessages","moreMessages","Object","assign","_default","default"],"sources":["../src/config.js"],"sourcesContent":["const validatorHandlers = {};\nconst mapOfValidators = {};\n\nconst transformerHandlers = {};\nconst mapOfTransformers = {};\n\nconst formatName = (name, left, context, custom) => {\n    const fullName = name == null ? context.path : makePath(name, context?.path);\n    return fullName == null\n        ? messages.nameOfValue(custom)\n        : context?.mapOfNames\n        ? context.mapOfNames[fullName]\n        : fullName;\n};\n\nconst formatKey = (key, hasPrefix) => (Number.isInteger(key) ? `[${key}]` : hasPrefix ? '.' + key : key);\nconst makePath = (key, prefix) => (prefix != null ? `${prefix}${formatKey(key, true)}` : formatKey(key, false));\nconst formatPath = (prefix) => (prefix ? '[' + prefix + ']' : '<ROOT>');\n\nexport const getChildContext = (context, currentValue, childKey, childValue) => ({\n    ...context,\n    path: makePath(childKey, context.path),\n    $$PARENT: currentValue,\n    $$CURRENT: childValue,\n    $$KEY: childKey,\n});\n\nexport const messages = {\n    formatName,\n    formatKey,\n    makePath,\n\n    //Exception messages\n    SYNTAX_OP_NOT_ALONE: 'Transformer operator can only be used alone in one pipeline stage.',\n    SYNTAX_INVALID_EXPR: (expr) => `Invalid expression syntax: ${JSON.stringify(expr)}`, // complext expr, not split out operator yet\n    SYNTAX_INVALID_OP: (op, prefix) => `Invalid operator \"${op}\" at ${formatPath(prefix)}.`,\n    SYNTAX_NUMBER_AS_EXPR: 'Number value cannot be used as a transformer expression.',\n\n    INVALID_TRANSFORMER_OP: (op) => `Invalid transformer operator \"${op}\".`,\n    UNSUPPORTED_VALIDATION_OP: (op, prefix) => `Unsupported validation operator \"${op}\" at ${formatPath(prefix)}.`,\n    INVALID_COLLECTION_OP: (op) => `Invalid collection operator \"${op}\".`,\n\n    INVALID_TRANSFORMER_HANDLER: (tag) => `Handler for transformer \"${tag}\" not found.`,\n    INVALID_TEST_HANLDER: (tag) => `Handler for validator \"${tag}\" not found.`,\n\n    INVALID_OP_EXPR: (op, right, expected) => `Invalid \"${op}\" expression: ${JSON.stringify(right)}` + (expected ? `, expected: ${JSON.stringify(expected)}.` : '.'),\n    INVALID_COLLECTION_OP_EXPR: (collectionOp, op, right) =>\n        `Invalid \"${op}\" expression for collection \"${collectionOp}\" traversing: ${JSON.stringify(right)}.`,\n    UNSUPPORTED_TYPE: (type) => `Supported type \"${type}\".`,\n\n    OPERAND_NOT_TUPLE: (op) =>\n        `The right operand of a collection operator ${op ? '\"' + op + '\" ' : ''}must be a two-tuple.`,\n    OPERAND_NOT_TUPLE_2_OR_3: (op) => `The right operand of a \"${op}\" operator must be either a 2-tuple or a 3-tuple.`,\n    OPERAND_NOT_ARRAY: (op) => `The right operand of a \"${op}\" operator must be an array.`,\n    OPERAND_NOT_BOOL: (op) => `The right operand of a \"${op}\" operator must be a boolean value.`,\n    OPERAND_NOT_STRING: (op) => `The right operand of a \"${op}\" operator must be a string.`,\n    OPERAND_NOT_OBJECT: (op) => `The right operand of a \"${op}\" operator must be an object.`,\n\n    VALUE_NOT_ARRAY: (op) => `The value to take a \"${op}\" operator must be an array.`,\n    VALUE_NOT_COLLECTION: (op) => `The value to take a \"${op}\" operator must be either an object or an array.`,\n    VALUE_NOT_PRIMITIVE: (op) => `The value to take a \"${op}\" operator must be a primitive value, e.g. string, number.`,\n    VALUE_NOT_STRING: (op) => `The value to take a \"${op}\" operator must be a string.`,\n    VALUE_NOT_OBJECT: (op) => `The value to take a \"${op}\" operator must be an object.`,\n\n    REQUIRE_RIGHT_OPERAND: (op) => `Binary operator \"${op}\" requires a right operand.`,\n    RIGHT_OPERAND_NOT_EMPTY: (op) => `Unary operator \"${op}\" does not require a right operand.`,\n\n    MULTI_ERRORS: (numErrors) => `${numErrors} errors occurred.`,\n};\n\n//JSON Expression Syntax Runtime Configuration\nconst config = {\n    messages,\n    addValidatorToMap: (tokens, handler) => {\n        const [tag, ...alias] = tokens;\n\n        alias.forEach((op) => {\n            if (op in mapOfValidators) {\n                throw new Error(`Duplicate validator alias \"${op}\" for operator \"${tag}\".`);\n            }\n            mapOfValidators[op] = tag;\n        });\n\n        if (tag in validatorHandlers) {\n            throw new Error(`Duplicate operator name \"${tag}\".`);\n        }\n\n        validatorHandlers[tag] = handler;\n    },\n    addTransformerToMap: (tokens, handler) => {\n        const [tag, isUnary, ...alias] = tokens;\n\n        if (typeof isUnary !== 'boolean') {\n            throw new Error('The second param should be a boolean value.');\n        }\n\n        alias.forEach((op) => {\n            if (op in mapOfTransformers) {\n                throw new Error(`Duplicate transformer alias: \"${op}\" for operator \"${tag}\".`);\n            }\n            mapOfTransformers[op] = [tag, isUnary];\n        });\n\n        if (tag in transformerHandlers) {\n            throw new Error(`Duplicate operator name: \"${tag}\".`);\n        }\n\n        transformerHandlers[tag] = handler;\n    },\n    overrideTransformer: (tag, handler) => {\n        transformerHandlers[tag] = handler;\n    },\n    overrideValidator: (tag, handler) => {\n        validatorHandlers[tag] = handler;\n    },\n\n    getValidatorTag: (op) => mapOfValidators[op],\n    getValidator: (tag) => validatorHandlers[tag],\n\n    getTransformerTagAndType: (op) => mapOfTransformers[op],\n    getTransformer: (tag) => transformerHandlers[tag],\n    loadMessages: (moreMessages) => Object.assign(config.messages, moreMessages),\n};\n\nexport default config;\n"],"mappings":"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"}