{"version":3,"file":"msg.en-US.js","names":["formatName","config","messages","nameOfValue","custom","lowerCase","validationErrors","vops","EQUAL","name","left","right","context","JSON","stringify","NOT_EQUAL","NOT","GREATER_THAN","GREATER_THAN_OR_EQUAL","LESS_THAN","LESS_THAN_OR_EQUAL","IN","NOT_IN","EXISTS","REQUIRED","TYPE","MATCH","MATCH_ANY","ALL_MATCH","ANY_ONE_MATCH","HAS_KEYS","Array","isArray","join","START_WITH","END_WITH","SAME_AS","loadMessages"],"sources":["../../src/locale/msg.en-US.js"],"sourcesContent":["import config from '../config';\nimport vops from '../validateOperators';\n\nconst { formatName } = config.messages;\n\nconst messages = {\n    nameOfValue: (custom) => (custom?.lowerCase ? 'the value' : 'The value'),\n    validationErrors: {\n        [vops.EQUAL]: (name, left, right, context) =>\n            `${formatName(name, left, context)} must be ${JSON.stringify(right)}.`,\n        [vops.NOT_EQUAL]: (name, left, right, context) =>\n            `${formatName(name, left, context)} must not be ${JSON.stringify(right)}.`,\n        [vops.NOT]: (name, left, right, context) =>\n            `${formatName(name, left, context)} must not match ${JSON.stringify(right)}.`,\n        [vops.GREATER_THAN]: (name, left, right, context) =>\n            `${formatName(name, left, context)} must be greater than ${right}.`,\n        [vops.GREATER_THAN_OR_EQUAL]: (name, left, right, context) =>\n            `${formatName(name, left, context)} must be greater than or equal to ${right}.`,\n        [vops.LESS_THAN]: (name, left, right, context) =>\n            `${formatName(name, left, context)} must be less than ${right}.`,\n        [vops.LESS_THAN_OR_EQUAL]: (name, left, right, context) =>\n            `${formatName(name, left, context)} must not exceed ${right}.`,\n        [vops.IN]: (name, left, right, context) =>\n            `${formatName(name, left, context)} must be one of ${JSON.stringify(right)}.`,\n        [vops.NOT_IN]: (name, left, right, context) =>\n            `${formatName(name, left, context)} must not be any one of ${JSON.stringify(right)}.`,\n        [vops.EXISTS]: (name, left, right, context) =>\n            `${formatName(name, left, context)} ${right ? 'must not be null' : 'must be null'}.`,\n        [vops.REQUIRED]: (name, left, right, context) => `${formatName(name, left, context)} is required.`,\n        [vops.TYPE]: (name, left, right, context) =>\n            `The value of ${formatName(name, left, context)} must be a(n) \"${right}\".`,\n        [vops.MATCH]: (name, left, right, context) =>\n            `${formatName(name, left, context)} must match ${JSON.stringify(right)}.`,\n        [vops.MATCH_ANY]: (name, left, right, context) =>\n            `${formatName(name, left, context)} does not match any of given criterias.`,\n\n        [vops.ALL_MATCH]: (name, left, right, context) =>\n            `One of the element of ${formatName(name, left, context, {\n                lowerCase: true,\n            })} does not match the requirement(s).`,\n        [vops.ANY_ONE_MATCH]: (name, left, right, context) =>\n            `None of the element of ${formatName(name, left, context, {\n                lowerCase: true,\n            })} matches the requirement(s).`,\n\n        [vops.HAS_KEYS]: (name, left, right, context) =>\n            `${formatName(name, left, context)} must have all of these keys [${\n                Array.isArray(right) ? right.join(', ') : [right]\n            }].`,\n        [vops.START_WITH]: (name, left, right, context) =>\n            `${formatName(name, left, context)} must start with \"${right}\".`,\n        [vops.END_WITH]: (name, left, right, context) => `${formatName(name, left, context)} must end with \"${right}\".`,\n        [vops.SAME_AS]: (name, left, right, context) =>\n            `${formatName(name, left, context)} does not match ${formatName(right)}.`,\n    },\n};\n\nconfig.loadMessages(messages);\n"],"mappings":";;AAAA;;AACA;;;;;;;;AAEA,IAAQA,UAAR,GAAuBC,kBAAA,CAAOC,QAA9B,CAAQF,UAAR;AAEA,IAAME,QAAQ,GAAG;EACbC,WAAW,EAAE,qBAACC,MAAD;IAAA,OAAaA,MAAM,SAAN,IAAAA,MAAM,WAAN,IAAAA,MAAM,CAAEC,SAAR,GAAoB,WAApB,GAAkC,WAA/C;EAAA,CADA;EAEbC,gBAAgB,8DACXC,6BAAA,CAAKC,KADM,EACE,UAACC,IAAD,EAAOC,IAAP,EAAaC,KAAb,EAAoBC,OAApB;IAAA,iBACPZ,UAAU,CAACS,IAAD,EAAOC,IAAP,EAAaE,OAAb,CADH,sBACoCC,IAAI,CAACC,SAAL,CAAeH,KAAf,CADpC;EAAA,CADF,sCAGXJ,6BAAA,CAAKQ,SAHM,EAGM,UAACN,IAAD,EAAOC,IAAP,EAAaC,KAAb,EAAoBC,OAApB;IAAA,iBACXZ,UAAU,CAACS,IAAD,EAAOC,IAAP,EAAaE,OAAb,CADC,0BACoCC,IAAI,CAACC,SAAL,CAAeH,KAAf,CADpC;EAAA,CAHN,sCAKXJ,6BAAA,CAAKS,GALM,EAKA,UAACP,IAAD,EAAOC,IAAP,EAAaC,KAAb,EAAoBC,OAApB;IAAA,iBACLZ,UAAU,CAACS,IAAD,EAAOC,IAAP,EAAaE,OAAb,CADL,6BAC6CC,IAAI,CAACC,SAAL,CAAeH,KAAf,CAD7C;EAAA,CALA,sCAOXJ,6BAAA,CAAKU,YAPM,EAOS,UAACR,IAAD,EAAOC,IAAP,EAAaC,KAAb,EAAoBC,OAApB;IAAA,iBACdZ,UAAU,CAACS,IAAD,EAAOC,IAAP,EAAaE,OAAb,CADI,mCAC0CD,KAD1C;EAAA,CAPT,sCASXJ,6BAAA,CAAKW,qBATM,EASkB,UAACT,IAAD,EAAOC,IAAP,EAAaC,KAAb,EAAoBC,OAApB;IAAA,iBACvBZ,UAAU,CAACS,IAAD,EAAOC,IAAP,EAAaE,OAAb,CADa,+CAC6CD,KAD7C;EAAA,CATlB,sCAWXJ,6BAAA,CAAKY,SAXM,EAWM,UAACV,IAAD,EAAOC,IAAP,EAAaC,KAAb,EAAoBC,OAApB;IAAA,iBACXZ,UAAU,CAACS,IAAD,EAAOC,IAAP,EAAaE,OAAb,CADC,gCAC0CD,KAD1C;EAAA,CAXN,sCAaXJ,6BAAA,CAAKa,kBAbM,EAae,UAACX,IAAD,EAAOC,IAAP,EAAaC,KAAb,EAAoBC,OAApB;IAAA,iBACpBZ,UAAU,CAACS,IAAD,EAAOC,IAAP,EAAaE,OAAb,CADU,8BAC+BD,KAD/B;EAAA,CAbf,sCAeXJ,6BAAA,CAAKc,EAfM,EAeD,UAACZ,IAAD,EAAOC,IAAP,EAAaC,KAAb,EAAoBC,OAApB;IAAA,iBACJZ,UAAU,CAACS,IAAD,EAAOC,IAAP,EAAaE,OAAb,CADN,6BAC8CC,IAAI,CAACC,SAAL,CAAeH,KAAf,CAD9C;EAAA,CAfC,sCAiBXJ,6BAAA,CAAKe,MAjBM,EAiBG,UAACb,IAAD,EAAOC,IAAP,EAAaC,KAAb,EAAoBC,OAApB;IAAA,iBACRZ,UAAU,CAACS,IAAD,EAAOC,IAAP,EAAaE,OAAb,CADF,qCACkDC,IAAI,CAACC,SAAL,CAAeH,KAAf,CADlD;EAAA,CAjBH,sCAmBXJ,6BAAA,CAAKgB,MAnBM,EAmBG,UAACd,IAAD,EAAOC,IAAP,EAAaC,KAAb,EAAoBC,OAApB;IAAA,iBACRZ,UAAU,CAACS,IAAD,EAAOC,IAAP,EAAaE,OAAb,CADF,cAC2BD,KAAK,GAAG,kBAAH,GAAwB,cADxD;EAAA,CAnBH,sCAqBXJ,6BAAA,CAAKiB,QArBM,EAqBK,UAACf,IAAD,EAAOC,IAAP,EAAaC,KAAb,EAAoBC,OAApB;IAAA,iBAAmCZ,UAAU,CAACS,IAAD,EAAOC,IAAP,EAAaE,OAAb,CAA7C;EAAA,CArBL,sCAsBXL,6BAAA,CAAKkB,IAtBM,EAsBC,UAAChB,IAAD,EAAOC,IAAP,EAAaC,KAAb,EAAoBC,OAApB;IAAA,8BACOZ,UAAU,CAACS,IAAD,EAAOC,IAAP,EAAaE,OAAb,CADjB,6BACwDD,KADxD;EAAA,CAtBD,sCAwBXJ,6BAAA,CAAKmB,KAxBM,EAwBE,UAACjB,IAAD,EAAOC,IAAP,EAAaC,KAAb,EAAoBC,OAApB;IAAA,iBACPZ,UAAU,CAACS,IAAD,EAAOC,IAAP,EAAaE,OAAb,CADH,yBACuCC,IAAI,CAACC,SAAL,CAAeH,KAAf,CADvC;EAAA,CAxBF,sCA0BXJ,6BAAA,CAAKoB,SA1BM,EA0BM,UAAClB,IAAD,EAAOC,IAAP,EAAaC,KAAb,EAAoBC,OAApB;IAAA,iBACXZ,UAAU,CAACS,IAAD,EAAOC,IAAP,EAAaE,OAAb,CADC;EAAA,CA1BN,sCA6BXL,6BAAA,CAAKqB,SA7BM,EA6BM,UAACnB,IAAD,EAAOC,IAAP,EAAaC,KAAb,EAAoBC,OAApB;IAAA,uCACWZ,UAAU,CAACS,IAAD,EAAOC,IAAP,EAAaE,OAAb,EAAsB;MACrDP,SAAS,EAAE;IAD0C,CAAtB,CADrB;EAAA,CA7BN,sCAiCXE,6BAAA,CAAKsB,aAjCM,EAiCU,UAACpB,IAAD,EAAOC,IAAP,EAAaC,KAAb,EAAoBC,OAApB;IAAA,wCACQZ,UAAU,CAACS,IAAD,EAAOC,IAAP,EAAaE,OAAb,EAAsB;MACtDP,SAAS,EAAE;IAD2C,CAAtB,CADlB;EAAA,CAjCV,sCAsCXE,6BAAA,CAAKuB,QAtCM,EAsCK,UAACrB,IAAD,EAAOC,IAAP,EAAaC,KAAb,EAAoBC,OAApB;IAAA,iBACVZ,UAAU,CAACS,IAAD,EAAOC,IAAP,EAAaE,OAAb,CADA,2CAETmB,KAAK,CAACC,OAAN,CAAcrB,KAAd,IAAuBA,KAAK,CAACsB,IAAN,CAAW,IAAX,CAAvB,GAA0C,CAACtB,KAAD,CAFjC;EAAA,CAtCL,sCA0CXJ,6BAAA,CAAK2B,UA1CM,EA0CO,UAACzB,IAAD,EAAOC,IAAP,EAAaC,KAAb,EAAoBC,OAApB;IAAA,iBACZZ,UAAU,CAACS,IAAD,EAAOC,IAAP,EAAaE,OAAb,CADE,gCACwCD,KADxC;EAAA,CA1CP,sCA4CXJ,6BAAA,CAAK4B,QA5CM,EA4CK,UAAC1B,IAAD,EAAOC,IAAP,EAAaC,KAAb,EAAoBC,OAApB;IAAA,iBAAmCZ,UAAU,CAACS,IAAD,EAAOC,IAAP,EAAaE,OAAb,CAA7C,8BAAqFD,KAArF;EAAA,CA5CL,sCA6CXJ,6BAAA,CAAK6B,OA7CM,EA6CI,UAAC3B,IAAD,EAAOC,IAAP,EAAaC,KAAb,EAAoBC,OAApB;IAAA,iBACTZ,UAAU,CAACS,IAAD,EAAOC,IAAP,EAAaE,OAAb,CADD,6BACyCZ,UAAU,CAACW,KAAD,CADnD;EAAA,CA7CJ;AAFH,CAAjB;;AAoDAV,kBAAA,CAAOoC,YAAP,CAAoBnC,QAApB"}