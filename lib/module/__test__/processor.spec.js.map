{"version":3,"sources":["processor.spec.js"],"names":["JES","require","describe","it","obj","key1","key11","key12","key13","jeso","pipelined","evaluate","should","be","exactly","value","eql","update","$add","$subtract","$multiply","$divide","keep","items","name","score","ignored","exlcluded","excluded","newItem","$set","highestScore","$sortBy","$nth","$of","exist","not","array","email","other","transformed","user","$pick","agency","$merge","$not","$startWith","$addItem","$omit","$test","$select","$gte","id","$if","$gt","match"],"mappings":"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","sourcesContent":["const JES = require('../index');\n\ndescribe('jes:processor', function () {  \n    it('eval', function () {\n        let obj = {\n            key1: 2000,\n            key11: 2000,\n            key12: 2000,\n            key13: 2000,\n        };\n\n        let jeso = new JES(obj);\n\n        const pipelined = jeso.evaluate([\n            {\n                '|>$add': 100,\n            },\n            {\n                '|>$subtract': 200,\n            },\n            '$sum',\n        ]);\n\n        pipelined.should.be.exactly(7600);\n        jeso.value.should.be.eql(obj);\n\n        jeso.update({\n            key1: {\n                $add: 100,\n            },\n            key11: {\n                $subtract: 100,\n            },\n            key12: {\n                $multiply: 100,\n            },\n            key13: {\n                $divide: 100,\n            },\n        }).value.should.be.eql({\n            key1: 2100,\n            key11: 1900,\n            key12: 200000,\n            key13: 20,\n        });\n\n        jeso.update([\n            '$sum',\n            {\n                $add: 1,\n            },\n        ]).value.should.be.exactly(204021);\n    });\n\n    it('eval array', function () {\n        let obj = {\n            keep: 'keep',\n            items: [\n                { name: 'Jack', score: 60 },\n                { name: 'Bob', score: 40 },\n                { name: 'Jane', score: 80 },\n                { name: 'Peter', score: 100 },\n            ],\n            ignored: 'ingored',\n            exlcluded: 'exlcluded',\n        };\n\n        let jeso = new JES(obj);\n\n        const pipelined = jeso.evaluate({\n            keep: true,\n            excluded: false,\n            newItem: { $set: 'new' },\n            highestScore: [\n                '$$CURRENT.items',\n                {\n                    $sortBy: 'score',\n                },\n                '$reverse',\n                {\n                    $nth: 0,\n                },\n                {\n                    $of: 'score',\n                },\n            ],\n        });\n\n        should.exist(pipelined.keep);\n        should.exist(pipelined.newItem);\n        should.exist(pipelined.highestScore);\n        should.not.exist(pipelined.exlcluded);\n        should.not.exist(pipelined.items);\n        should.not.exist(pipelined.ignored);\n\n        pipelined.newItem.should.be.exactly('new');\n        pipelined.highestScore.should.be.exactly(100);\n    });\n\n    it('transform collection', function () {\n        let array = [\n            {\n                'user': 100,\n                'agency': 1,\n                ':user': { email: 'email1', other: 'any' },\n                ':agency': { name: 'agency1', other: 'any' },\n            },\n            {\n                'user': 101,\n                'agency': 1,\n                ':user': { email: 'email2', other: 'any' },\n                ':agency': { name: 'agency1', other: 'any' },\n            },\n            {\n                'user': 102,\n                'agency': 1,\n                ':user': { email: 'email3', other: 'any' },\n                ':agency': { name: 'agency1', other: 'any' },\n            },\n            {\n                'user': 103,\n                'agency': 2,\n                ':user': { email: 'email4', other: 'any' },\n                ':agency': { name: 'agency2', other: 'any' },\n            },\n            {\n                'user': 104,\n                'agency': 2,\n                ':user': { email: 'email5', other: 'any' },\n                ':agency': { name: 'agency2', other: 'any' },\n            },\n        ];\n\n        let transformed = JES.evaluate(array, {\n            '|>$apply': {\n                user: ['$$CURRENT.:user', { $pick: ['email'] }],\n                agency: ['$$CURRENT.:agency', { $pick: ['name'] }],\n            },\n        });\n\n        transformed.should.be.eql([\n            { user: { email: 'email1' }, agency: { name: 'agency1' } },\n            { user: { email: 'email2' }, agency: { name: 'agency1' } },\n            { user: { email: 'email3' }, agency: { name: 'agency1' } },\n            { user: { email: 'email4' }, agency: { name: 'agency2' } },\n            { user: { email: 'email5' }, agency: { name: 'agency2' } },\n        ]);\n    });\n\n    it('transform collection - merge', function () {\n        let array = [\n            {\n                'user': 100,\n                'agency': 1,\n                ':user': { email: 'email1', other: 'any' },\n                ':agency': { name: 'agency1', other: 'any' },\n            },\n            {\n                'user': 101,\n                'agency': 1,\n                ':user': { email: 'email2', other: 'any' },\n                ':agency': { name: 'agency1', other: 'any' },\n            },\n            {\n                'user': 102,\n                'agency': 1,\n                ':user': { email: 'email3', other: 'any' },\n                ':agency': { name: 'agency1', other: 'any' },\n            },\n            {\n                'user': 103,\n                'agency': 2,\n                ':user': { email: 'email4', other: 'any' },\n                ':agency': { name: 'agency2', other: 'any' },\n            },\n            {\n                'user': 104,\n                'agency': 2,\n                ':user': { email: 'email5', other: 'any' },\n                ':agency': { name: 'agency2', other: 'any' },\n            },\n        ];\n\n        let transformed = JES.evaluate(array, {\n            '|>$apply': {\n                $merge: [\n                    {\n                        $pick: {\n                            $not: {\n                                $startWith: ':',\n                            },\n                        },\n                    },\n                    {\n                        '@user': ['$$CURRENT.:user', { $pick: ['email'] }],\n                        '@agency': ['$$CURRENT.:agency', { $pick: ['name'] }],\n                    },\n                ],\n            },\n        });\n\n        transformed.should.be.eql([\n            {\n                'user': 100,\n                'agency': 1,\n                '@user': { email: 'email1' },\n                '@agency': { name: 'agency1' },\n            },\n            {\n                'user': 101,\n                'agency': 1,\n                '@user': { email: 'email2' },\n                '@agency': { name: 'agency1' },\n            },\n            {\n                'user': 102,\n                'agency': 1,\n                '@user': { email: 'email3' },\n                '@agency': { name: 'agency1' },\n            },\n            {\n                'user': 103,\n                'agency': 2,\n                '@user': { email: 'email4' },\n                '@agency': { name: 'agency2' },\n            },\n            {\n                'user': 104,\n                'agency': 2,\n                '@user': { email: 'email5' },\n                '@agency': { name: 'agency2' },\n            },\n        ]);\n    });\n\n    it('pick & omit by jes', function () {\n        let array = [\n            {\n                'id': 1,\n                'user': 100,\n                'agency': 1,\n                ':user': { email: 'email1', other: 'any' },\n                ':agency': { name: 'agency1', other: 'any' },\n            },\n            {\n                'id': 2,\n                'user': 101,\n                'agency': 1,\n                ':user': { email: 'email2', other: 'any' },\n                ':agency': { name: 'agency1', other: 'any' },\n            },\n            {\n                'id': 3,\n                'user': 102,\n                'agency': 1,\n                ':user': { email: 'email3', other: 'any' },\n                ':agency': { name: 'agency1', other: 'any' },\n            },\n            {\n                'id': 4,\n                'user': 103,\n                'agency': 2,\n                ':user': { email: 'email4', other: 'any' },\n                ':agency': { name: 'agency2', other: 'any' },\n            },\n            {\n                'id': 5,\n                'user': 104,\n                'agency': 2,\n                ':user': { email: 'email5', other: 'any' },\n                ':agency': { name: 'agency2', other: 'any' },\n            },\n        ];\n\n        let transformed = JES.evaluate(array, {\n            '|>$apply': [\n                {\n                    $pick: {\n                        $not: {\n                            $startWith: ':',\n                        },\n                    },\n                },\n                {\n                    $addItem: ['$test', '$$CURRENT.id'],\n                },\n                {\n                    $omit: ['id'],\n                },\n            ],\n        });\n\n        transformed.should.be.eql([\n            { user: 100, agency: 1, $test: 1 },\n            { user: 101, agency: 1, $test: 2 },\n            { user: 102, agency: 1, $test: 3 },\n            { user: 103, agency: 2, $test: 4 },\n            { user: 104, agency: 2, $test: 5 },\n        ]);\n    });\n\n    it('filter', function () {\n        let array = [\n            {\n                'id': 1,\n                'user': 100,\n                'agency': 1,\n                ':user': { email: 'email1', other: 'any' },\n                ':agency': { name: 'agency1', other: 'any' },\n            },\n            {\n                'id': 2,\n                'user': 101,\n                'agency': 1,\n                ':user': { email: 'email2', other: 'any' },\n                ':agency': { name: 'agency1', other: 'any' },\n            },\n            {\n                'id': 3,\n                'user': 102,\n                'agency': 1,\n                ':user': { email: 'email3', other: 'any' },\n                ':agency': { name: 'agency1', other: 'any' },\n            },\n            {\n                'id': 4,\n                'user': 103,\n                'agency': 2,\n                ':user': { email: 'email4', other: 'any' },\n                ':agency': { name: 'agency2', other: 'any' },\n            },\n            {\n                'id': 5,\n                'user': 104,\n                'agency': 2,\n                ':user': { email: 'email5', other: 'any' },\n                ':agency': { name: 'agency2', other: 'any' },\n            },\n        ];\n\n        let transformed = JES.evaluate(array, [\n            {\n                $select: {\n                    user: {\n                        $gte: 102,\n                    },\n                },\n            },\n            {\n                '|>$omit': {\n                    $startWith: ':',\n                },\n            },\n        ]);\n\n        transformed.should.be.eql([\n            { id: 3, user: 102, agency: 1 },\n            { id: 4, user: 103, agency: 2 },\n            { id: 5, user: 104, agency: 2 },\n        ]);\n    });\n\n    it('if', function () {\n        let obj = {\n            key1: 1\n        };\n\n        const jeso = new JES(obj);\n\n        jeso.evaluate({\n            $if: [\n                { key1: { $gt: 0 } },\n                { $set: 'positive' },\n                { $set: 'non-positive' }\n            ]\n        }).match('positive');\n    });\n});\n"]}