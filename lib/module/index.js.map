{"version":3,"sources":["index.js"],"names":["config","validate","transform","JES","constructor","value","match","expected","evaluate","expr","update","actual","expectedJES","reason","throwError","abortEarly","plainError"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AAEA;AACA;AACA;AACA;;AACA,MAAMC,GAAN,CAAU;AAgBN;AACJ;AACA;AACIC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,SAAKA,KAAL,GAAaA,KAAb;AACH;AAED;AACJ;AACA;AACA;AACA;AACA;;;AACIC,EAAAA,KAAK,CAACC,QAAD,EAAW;AACZN,IAAAA,QAAQ,CAAC,KAAKI,KAAN,EAAaE,QAAb,CAAR;AACA,WAAO,IAAP;AACH;AAED;AACJ;AACA;AACA;;;AACIC,EAAAA,QAAQ,CAACC,IAAD,EAAO;AACX,WAAOP,SAAS,CAAC,KAAKG,KAAN,EAAaI,IAAb,CAAhB;AACH;AAED;AACJ;AACA;AACA;AACA;;;AACIC,EAAAA,MAAM,CAACD,IAAD,EAAO;AACT,SAAKJ,KAAL,GAAaH,SAAS,CAAC,KAAKG,KAAN,EAAaI,IAAb,CAAtB;AACA,WAAO,IAAP;AACH;;AAlDK;;gBAAJN,G,YACcH,M;;gBADdG,G,WAEa,CAACQ,MAAD,EAASC,WAAT,KAAyB;AACpC,QAAMC,MAAM,GAAGZ,QAAQ,CAACU,MAAD,EAASC,WAAT,EAAsB;AACzCE,IAAAA,UAAU,EAAE,KAD6B;AAEzCC,IAAAA,UAAU,EAAE,IAF6B;AAGzCC,IAAAA,UAAU,EAAE;AAH6B,GAAtB,CAAvB;;AAKA,MAAIH,MAAM,KAAK,IAAf,EAAqB;AACjB,WAAO,CAAC,IAAD,CAAP;AACH;;AAED,SAAO,CAAC,KAAD,EAAQA,MAAR,CAAP;AACH,C;;gBAbCV,G,cAcgBD,S;;AAuCtB,eAAeC,GAAf","sourcesContent":["import config from './config';\nimport validate from './validators';\nimport transform from './transformers';\n\n/**\n * JSON Expression Syntax Object\n * @class\n */\nclass JES {\n    static config = config;\n    static match = (actual, expectedJES) => {\n        const reason = validate(actual, expectedJES, {\n            throwError: false,\n            abortEarly: true,\n            plainError: true,\n        });\n        if (reason === true) {\n            return [true];\n        }\n\n        return [false, reason];\n    };\n    static evaluate = transform;\n\n    /**\n     * @param {object} value\n     */\n    constructor(value) {\n        this.value = value;\n    }\n\n    /**\n     * Match the value with expected conditions in JSON expression\n     * @param {object} expected - JSON match expression\n     * @throws ValidationError\n     * @returns {JES}\n     */\n    match(expected) {\n        validate(this.value, expected);\n        return this;\n    }\n\n    /**\n     * Evaluate a JSON expression against the value\n     * @param {object} - JSON operation expression\n     */\n    evaluate(expr) {\n        return transform(this.value, expr);\n    }\n\n    /**\n     * Evaluate a JSON expression against the value and update the value\n     * @param {object} - JSON operation expression\n     * @returns {JES}\n     */\n    update(expr) {\n        this.value = transform(this.value, expr);\n        return this;\n    }\n}\n\nexport default JES;\n"]}