{"version":3,"sources":["transformerOperators.js"],"names":["SIZE","SUM","GET_TYPE","MATCH","GET_BY_INDEX","GET_BY_KEY","FIND","IF","CAST_ARRAY","ADD","SUB","MUL","DIV","MOD","KEYS","VALUES","ENTRIES","OBJ_TO_ARRAY","PICK","OMIT","SLICE","GROUP","SORT","REVERSE","JOIN","MERGE","FILTER","REMAP","TO_JSON","TO_OBJ","SET","ADD_ITEM","ASSIGN","APPLY","INTERPOLATE","MAP","REDUCE"],"mappings":"AAAA;AACA,MAAMA,IAAI,GAAG,SAAb;AACA,MAAMC,GAAG,GAAG,QAAZ;AACA,MAAMC,QAAQ,GAAG,SAAjB;AACA,MAAMC,KAAK,GAAG,UAAd;AACA,MAAMC,YAAY,GAAG,oBAArB;AACA,MAAMC,UAAU,GAAG,kBAAnB;AACA,MAAMC,IAAI,GAAG,qBAAb;AACA,MAAMC,EAAE,GAAG,SAAX,C,CAEA;;AACA,MAAMC,UAAU,GAAG,eAAnB,C,CAEA;;AACA,MAAMC,GAAG,GAAG,KAAZ;AACA,MAAMC,GAAG,GAAG,UAAZ;AACA,MAAMC,GAAG,GAAG,UAAZ;AACA,MAAMC,GAAG,GAAG,QAAZ;AACA,MAAMC,GAAG,GAAG,WAAZ,C,CAEA;;AACA,MAAMC,IAAI,GAAG,SAAb;AACA,MAAMC,MAAM,GAAG,WAAf;AACA,MAAMC,OAAO,GAAG,YAAhB;AACA,MAAMC,YAAY,GAAG,iBAArB,C,CAAwC;;AACxC,MAAMC,IAAI,GAAG,SAAb,C,CAAwB;;AACxB,MAAMC,IAAI,GAAG,SAAb;AACA,MAAMC,KAAK,GAAG,OAAd,C,CAAuB;;AACvB,MAAMC,KAAK,GAAG,UAAd;AACA,MAAMC,IAAI,GAAG,UAAb;AACA,MAAMC,OAAO,GAAG,SAAhB;AACA,MAAMC,IAAI,GAAG,MAAb;AACA,MAAMC,KAAK,GAAG,OAAd;AACA,MAAMC,MAAM,GAAG,WAAf,C,CAA4B;;AAC5B,MAAMC,KAAK,GAAG,UAAd,C,CAA0B;;AAC1B,MAAMC,OAAO,GAAG,eAAhB;AACA,MAAMC,MAAM,GAAG,YAAf,C,CAEA;;AACA,MAAMC,GAAG,GAAG,WAAZ;AACA,MAAMC,QAAQ,GAAG,eAAjB;AACA,MAAMC,MAAM,GAAG,QAAf;AACA,MAAMC,KAAK,GAAG,sBAAd;AAEA,MAAMC,WAAW,GAAG,aAApB,C,CAEA;;AACA,MAAMC,GAAG,GAAG,KAAZ;AACA,MAAMC,MAAM,GAAG,QAAf;AAEA,eAAe;AACXpC,EAAAA,IADW;AAEXC,EAAAA,GAFW;AAGXC,EAAAA,QAHW;AAIXC,EAAAA,KAJW;AAKXC,EAAAA,YALW;AAMXC,EAAAA,UANW;AAOXC,EAAAA,IAPW;AAQXC,EAAAA,EARW;AAUXC,EAAAA,UAVW;AAYXC,EAAAA,GAZW;AAaXC,EAAAA,GAbW;AAcXC,EAAAA,GAdW;AAeXC,EAAAA,GAfW;AAgBXC,EAAAA,GAhBW;AAkBXC,EAAAA,IAlBW;AAmBXC,EAAAA,MAnBW;AAoBXC,EAAAA,OApBW;AAqBXC,EAAAA,YArBW;AAsBXC,EAAAA,IAtBW;AAsBL;AACNC,EAAAA,IAvBW;AAwBXC,EAAAA,KAxBW;AAyBXC,EAAAA,KAzBW;AA0BXC,EAAAA,IA1BW;AA2BXC,EAAAA,OA3BW;AA4BXC,EAAAA,IA5BW;AA6BXC,EAAAA,KA7BW;AA8BXC,EAAAA,MA9BW;AA8BH;AACRC,EAAAA,KA/BW;AA+BJ;AACPC,EAAAA,OAhCW;AAiCXC,EAAAA,MAjCW;AAmCXC,EAAAA,GAnCW;AAoCXC,EAAAA,QApCW;AAqCXC,EAAAA,MArCW;AAsCXC,EAAAA,KAtCW;AAwCXC,EAAAA,WAxCW;AA0CXC,EAAAA,GA1CW;AA2CXC,EAAAA;AA3CW,CAAf","sourcesContent":["//Query & aggregate operators (pure)\nconst SIZE = 'Size Of';\nconst SUM = 'Sum Of';\nconst GET_TYPE = 'Type Of';\nconst MATCH = 'Validate';\nconst GET_BY_INDEX = 'Get Value By Index';\nconst GET_BY_KEY = 'Get Value By Key';\nconst FIND = 'Get Index Or Key Of';\nconst IF = 'If Else';\n\n//Type casting operators (pure)\nconst CAST_ARRAY = 'Cast To Array';\n\n//Math operators (pure)\nconst ADD = 'Add';\nconst SUB = 'Subtract';\nconst MUL = 'Multiply';\nconst DIV = 'Divide';\nconst MOD = 'Remainder';\n\n//Collection operators (pure)\nconst KEYS = 'Keys Of';\nconst VALUES = 'Values Of';\nconst ENTRIES = 'Entries Of';\nconst OBJ_TO_ARRAY = 'Object To Array'; // like $objectToArray of mongodb\nconst PICK = 'Pick By'; // filter by key\nconst OMIT = 'Omit By';\nconst SLICE = 'Slice'; // limit offset, count\nconst GROUP = 'Group By';\nconst SORT = 'Order By';\nconst REVERSE = 'Reverse';\nconst JOIN = 'Join';\nconst MERGE = 'Merge';\nconst FILTER = 'Filter By'; // filter by value\nconst REMAP = 'Map Keys'; // map a key to another name\nconst TO_JSON = 'JSON Stringfy';\nconst TO_OBJ = 'JSON Parse';\n\n//Value updater (pure, copy on write)\nconst SET = 'Set Value';\nconst ADD_ITEM = 'Add K-V Entry';\nconst ASSIGN = 'Assign';\nconst APPLY = 'Apply Transformation';\n\nconst INTERPOLATE = 'Interpolate';\n\n//Colllection modifier\nconst MAP = 'Map';\nconst REDUCE = 'Reduce';\n\nexport default {\n    SIZE,\n    SUM,\n    GET_TYPE,\n    MATCH,\n    GET_BY_INDEX,\n    GET_BY_KEY,\n    FIND,\n    IF,\n\n    CAST_ARRAY,\n\n    ADD,\n    SUB,\n    MUL,\n    DIV,\n    MOD,\n\n    KEYS,\n    VALUES,\n    ENTRIES,\n    OBJ_TO_ARRAY,\n    PICK, // filter by key\n    OMIT,\n    SLICE,\n    GROUP,\n    SORT,\n    REVERSE,\n    JOIN,\n    MERGE,\n    FILTER, // filter by value\n    REMAP, // map a key to another name\n    TO_JSON,\n    TO_OBJ,\n\n    SET,\n    ADD_ITEM,\n    ASSIGN,\n    APPLY,\n\n    INTERPOLATE,\n\n    MAP,\n    REDUCE,\n};\n"]}