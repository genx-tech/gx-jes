{"version":3,"sources":["index.js"],"names":["_each","ARRAY","BOOLEAN","DATETIME","INTEGER","NUMBER","OBJECT","TEXT","types","Types","Builtin","Set","addType","name","type","has","Error","add","alias","forEach","a"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,aAAlB;AAEA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,MAAMC,KAAK,GAAG;AACVP,EAAAA,KADU;AAEVC,EAAAA,OAFU;AAGVC,EAAAA,QAHU;AAIVC,EAAAA,OAJU;AAKVC,EAAAA,MALU;AAMVC,EAAAA,MANU;AAOVC,EAAAA;AAPU,CAAd;AAUA,MAAME,KAAK,GAAG,EACV,GAAGD,KADO;AAEVE,EAAAA,OAAO,EAAE,IAAIC,GAAJ;AAFC,CAAd;;AAKA,MAAMC,OAAO,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAgB;AAC5B,MAAIL,KAAK,CAACC,OAAN,CAAcK,GAAd,CAAkBD,IAAlB,CAAJ,EAA6B;AACzB,UAAM,IAAIE,KAAJ,CAAW,uBAAsBH,IAAK,kBAAtC,CAAN;AACH;;AAEDJ,EAAAA,KAAK,CAACI,IAAD,CAAL,GAAcC,IAAd;AACAL,EAAAA,KAAK,CAACC,OAAN,CAAcO,GAAd,CAAkBJ,IAAlB;AACH,CAPD;;AASAb,KAAK,CAACQ,KAAD,EAASM,IAAD,IAAU;AACnBF,EAAAA,OAAO,CAACE,IAAI,CAACD,IAAN,EAAYC,IAAZ,CAAP;AAEAA,EAAAA,IAAI,CAACI,KAAL,IAAcJ,IAAI,CAACI,KAAL,CAAWC,OAAX,CAAoBC,CAAD,IAAOR,OAAO,CAACQ,CAAD,EAAIN,IAAJ,CAAjC,CAAd;AACH,CAJI,CAAL;;AAMA,eAAeL,KAAf","sourcesContent":["import _each from 'lodash/each';\n\nimport ARRAY from './array';\nimport BOOLEAN from './boolean';\nimport DATETIME from './datetime';\nimport INTEGER from './integer';\nimport NUMBER from './number';\nimport OBJECT from './object';\nimport TEXT from './text';\n\nconst types = {\n    ARRAY,\n    BOOLEAN,\n    DATETIME,\n    INTEGER,\n    NUMBER,\n    OBJECT,\n    TEXT,\n};\n\nconst Types = {\n    ...types,\n    Builtin: new Set(),\n};\n\nconst addType = (name, type) => {\n    if (Types.Builtin.has(type)) {\n        throw new Error(`Type name or alias \"${name}\" has been used.`);\n    }\n\n    Types[name] = type;\n    Types.Builtin.add(name);\n};\n\n_each(types, (type) => {\n    addType(type.name, type);\n\n    type.alias && type.alias.forEach((a) => addType(a, type));\n});\n\nexport default Types;\n"]}