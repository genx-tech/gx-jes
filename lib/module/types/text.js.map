{"version":3,"sources":["text.js"],"names":["validate","invalidType","name","alias","value","schema","options","useFieldPath","abortEarly","throwError","context"],"mappings":"AAAA,OAAOA,QAAP,IAAmBC,WAAnB,QAAsC,aAAtC;AAEA,eAAe;AACXC,EAAAA,IAAI,EAAE,MADK;AAGXC,EAAAA,KAAK,EAAE,CAAC,QAAD,EAAW,MAAX,CAHI;AAKXH,EAAAA,QAAQ,EAAE,UAACI,KAAD,EAAQC,MAAR,EAAuG;AAAA,QAAvFC,OAAuF,uEAA7E;AAAEC,MAAAA,YAAY,EAAE,IAAhB;AAAsBC,MAAAA,UAAU,EAAE,IAAlC;AAAwCC,MAAAA,UAAU,EAAE;AAApD,KAA6E;AAAA,QAAjBC,OAAiB,uEAAP,EAAO;;AAC7G,QAAIN,KAAK,IAAI,IAAT,IAAiB,OAAOA,KAAP,KAAiB,QAAtC,EAAgD;AAC5C,aAAOH,WAAW,CAACG,KAAD,EAAQ,MAAR,EAAgBE,OAAhB,EAAyBI,OAAzB,CAAlB;AACH;;AAED,QAAIL,MAAJ,EAAY;AACR,aAAOL,QAAQ,CAACI,KAAD,EAAQC,MAAR,EAAgBC,OAAhB,EAAyBI,OAAzB,CAAf;AACH;;AAED,WAAO,IAAP;AACH;AAfU,CAAf","sourcesContent":["import validate, { invalidType } from '../validate';\n\nexport default {\n    name: 'text',\n\n    alias: ['string', 'char'],\n\n    validate: (value, schema, options = { useFieldPath: true, abortEarly: true, throwError: true }, context = {}) => {\n        if (value != null && typeof value !== 'string') {\n            return invalidType(value, 'text', options, context);\n        }\n\n        if (schema) {\n            return validate(value, schema, options, context);\n        }\n\n        return true;\n    },\n};\n"]}