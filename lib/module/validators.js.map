{"version":3,"sources":["validators.js"],"names":["_isEqual","_has","_size","_castArray","ValidationError","validate","test","config","Types","ops","isPlainObject","transform","MSG","messages","OP_EQUAL","EQUAL","OP_NOT_EQUAL","NOT_EQUAL","OP_NOT","NOT","OP_GREATER_THAN","GREATER_THAN","OP_GREATER_THAN_OR_EQUAL","GREATER_THAN_OR_EQUAL","OP_LESS_THAN","LESS_THAN","OP_LESS_THAN_OR_EQUAL","LESS_THAN_OR_EQUAL","OP_LENGTH","LENGTH","OP_IN","IN","OP_NOT_IN","NOT_IN","OP_EXISTS","EXISTS","OP_MATCH","MATCH","OP_MATCH_ANY","MATCH_ANY","OP_ALL_MATCH","ALL_MATCH","OP_ANY_ONE_MATCH","ANY_ONE_MATCH","OP_TYPE","TYPE","OP_HAS_KEYS","HAS_KEYS","OP_START_WITH","START_WITH","OP_END_WITH","END_WITH","OP_SAME_AS","SAME_AS","addValidatorToMap","left","right","args","options","context","undefined","Array","isArray","Error","OPERAND_NOT_ARRAY","equal","getValidator","find","element","notEqual","every","OPERAND_NOT_BOOL","errors","rule","reason","asPredicate","push","abortEarly","length","throwError","path","$$ERROR","plainError","reason2","found","validationErrors","name","VALUE_NOT_ARRAY","leftItem","type","schema","INVALID_OP_EXPR","Builtin","has","UNSUPPORTED_TYPE","key","OPERAND_NOT_STRING","startsWith","endsWith","VALUE_NOT_PRIMITIVE","$$PARENT"],"mappings":"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","sourcesContent":["// JSON Expression Syntax (JES) for validation\nimport _isEqual from 'lodash/isEqual';\nimport _has from 'lodash/has';\nimport _size from 'lodash/size';\nimport _castArray from 'lodash/castArray';\n\nimport ValidationError from './ValidationError';\nimport validate, { test } from './validate';\n\nimport config from './config';\nimport Types from './types';\nimport ops from './validateOperators';\nimport { isPlainObject } from '@genx/july';\nimport transform from './transform';\n\nconst MSG = config.messages;\n\n//Validators [ name, ...operator alias ]\nconst OP_EQUAL = [ops.EQUAL, '$eq', '$eql', '$equal', '$being'];\nconst OP_NOT_EQUAL = [ops.NOT_EQUAL, '$ne', '$neq', '$notEqual'];\nconst OP_NOT = [ops.NOT, '$not'];\nconst OP_GREATER_THAN = [ops.GREATER_THAN, '$gt', '$>', '$greaterThan'];\nconst OP_GREATER_THAN_OR_EQUAL = [ops.GREATER_THAN_OR_EQUAL, '$gte', '$>=', '$greaterThanOrEqual', '$min'];\nconst OP_LESS_THAN = [ops.LESS_THAN, '$lt', '$<', '$lessThan'];\nconst OP_LESS_THAN_OR_EQUAL = [ops.LESS_THAN_OR_EQUAL, '$lte', '$<=', '$lessThanOrEqual', '$max'];\nconst OP_LENGTH = [ops.LENGTH, '$length', '$size', '$capacity'];\nconst OP_IN = [ops.IN, '$in'];\nconst OP_NOT_IN = [ops.NOT_IN, '$nin', '$notIn'];\nconst OP_EXISTS = [ops.EXISTS, '$exist', '$exists', '$notNull', '$required'];\nconst OP_MATCH = [ops.MATCH, '$has', '$match', '$all'];\nconst OP_MATCH_ANY = [ops.MATCH_ANY, '$any', '$or', '$either'];\nconst OP_ALL_MATCH = [ops.ALL_MATCH, '$allMatch', '|>$all', '|>$match'];\nconst OP_ANY_ONE_MATCH = [ops.ANY_ONE_MATCH, '$anyOneMatch', '|*$any', '|*$match', '|*$either'];\nconst OP_TYPE = [ops.TYPE, '$is', '$typeOf'];\nconst OP_HAS_KEYS = [ops.HAS_KEYS, '$hasKey', '$hasKeys', '$withKey', '$withKeys'];\nconst OP_START_WITH = [ops.START_WITH, '$startWith', '$startsWith'];\nconst OP_END_WITH = [ops.END_WITH, '$endWith', '$endsWith'];\nconst OP_SAME_AS = [ops.SAME_AS, '$sameAs'];\n\nconfig.addValidatorToMap(OP_EQUAL, (left, right) => _isEqual(left, right));\nconfig.addValidatorToMap(OP_NOT_EQUAL, (left, right) => !_isEqual(left, right));\nconfig.addValidatorToMap(OP_NOT, (left, ...args) => !test(left, ops.MATCH, ...args));\nconfig.addValidatorToMap(OP_GREATER_THAN, (left, right) => left > right);\nconfig.addValidatorToMap(OP_GREATER_THAN_OR_EQUAL, (left, right) => left >= right);\nconfig.addValidatorToMap(OP_LESS_THAN, (left, right) => left < right);\nconfig.addValidatorToMap(OP_LESS_THAN_OR_EQUAL, (left, right) => left <= right);\nconfig.addValidatorToMap(OP_LENGTH, (left, right, options, context) =>\n    test(_size(left), ops.MATCH, right, options, context)\n);\n\nconfig.addValidatorToMap(OP_IN, (left, right, options, context) => {\n    if (right == null) {\n        return false;\n    }\n\n    if (typeof right === 'string' || isPlainObject(right)) {\n        right = transform(undefined, right, context, true)\n    }\n\n    if (!Array.isArray(right)) {\n        throw new Error(MSG.OPERAND_NOT_ARRAY(ops.IN));\n    }\n\n    const equal = config.getValidator(ops.EQUAL);\n    return right.find((element) => equal(left, element));\n});\n\nconfig.addValidatorToMap(OP_NOT_IN, (left, right) => {\n    if (right == null) {\n        return true;\n    }\n    if (!Array.isArray(right)) {\n        throw new Error(MSG.OPERAND_NOT_ARRAY(ops.NOT_IN));\n    }\n\n    const notEqual = config.getValidator(ops.NOT_EQUAL);\n\n    return right.every((element) => notEqual(left, element));\n});\n\nconfig.addValidatorToMap(OP_EXISTS, (left, right) => {\n    if (typeof right !== 'boolean') {\n        throw new Error(MSG.OPERAND_NOT_BOOL(ops.EXISTS));\n    }\n\n    return right ? left != null : left == null;\n});\n\nconfig.addValidatorToMap(OP_MATCH, (left, right, options, context) => {\n    if (Array.isArray(right)) {\n        const errors = [];\n\n        right.every((rule) => {\n            const reason = validate(left, rule, { ...options, asPredicate: false }, context);\n            if (reason !== true) {\n                errors.push(..._castArray(reason));\n\n                if (options.abortEarly) {\n                    return false;\n                }\n            }\n\n            return true;\n        });\n\n        if (errors.length > 0) {\n            if (options.throwError) {\n                throw new ValidationError(errors, left, context.path);\n            }\n\n            if (!options.asPredicate) {\n                context.$$ERROR = errors.length === 1 && options.plainError ? errors[0] : errors;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    const reason2 = validate(left, right, options, context);\n    if (reason2 !== true) {\n        if (!options.asPredicate) {\n            context.$$ERROR = reason2;\n        }\n\n        return false;\n    }\n\n    return true;\n});\n\nconfig.addValidatorToMap(OP_MATCH_ANY, (left, right, options, context) => {\n    if (!Array.isArray(right)) {\n        throw new Error(MSG.OPERAND_NOT_ARRAY(ops.MATCH_ANY));\n    }\n\n    let found = right.find((rule) => {\n        const reason = validate(left, rule, { ...options, abortEarly: false, throwError: false }, context);\n        return reason === true;\n    });\n\n    if (!found) {\n        context.$$ERROR = MSG.validationErrors[ops.MATCH_ANY](context.name, left, right, context);\n    }\n\n    return found ? true : false;\n});\n\nconfig.addValidatorToMap(OP_ALL_MATCH, (left, right, options, context) => {\n    if (!Array.isArray(left)) {\n        throw new Error(MSG.VALUE_NOT_ARRAY(ops.ALL_MATCH));\n    }\n\n    const errors = [];\n\n    left.every((leftItem) => {\n        const reason = validate(leftItem, right, { ...options, asPredicate: false }, context);\n        if (reason !== true) {\n            errors.push(MSG.validationErrors[ops.ALL_MATCH](context.name, left, right, context), ..._castArray(reason));\n\n            if (options.abortEarly) {\n                return false;\n            }\n        }\n\n        return true;\n    });\n\n    if (errors.length > 0) {\n        if (options.throwError) {\n            throw new ValidationError(errors, left, context.path);\n        }\n\n        if (!options.asPredicate) {\n            context.$$ERROR = errors.length === 1 && options.plainError ? errors[0] : errors;\n        }\n\n        return false;\n    }\n\n    return true;\n});\n\nconfig.addValidatorToMap(OP_ANY_ONE_MATCH, (left, right, options, context) => {\n    if (!Array.isArray(left)) {\n        throw new Error(MSG.VALUE_NOT_ARRAY(ops.ANY_ONE_MATCH));\n    }\n\n    let found = left.find((leftItem) => {\n        const reason = validate(leftItem, right, { ...options, abortEarly: false, throwError: false }, context);\n        return reason === true;\n    });\n\n    if (!found) {\n        context.$$ERROR = MSG.validationErrors[ops.ANY_ONE_MATCH](context.name, left, right, context);\n    }\n\n    return found ? true : false;\n});\n\nconfig.addValidatorToMap(OP_TYPE, (left, right, options, context) => {\n    let type;\n    let schema;\n\n    if (Array.isArray(right)) {\n        if (right.length === 0) {\n            throw new Error(MSG.INVALID_OP_EXPR(OP_TYPE[0], right));\n        }\n\n        type = right[0];\n        if (right.length > 1) {\n            schema = right[1];\n        }\n    } else if (typeof right === 'string') {\n        type = right;\n    } else if (typeof right === 'object') {\n        type = right.type;\n        schema = right.schema;\n    }\n\n    if (!Types.Builtin.has(type)) {\n        throw new Error(MSG.UNSUPPORTED_TYPE(type));\n    }\n\n    const reason = Types[type].validate(left, schema, options, context);\n    if (reason !== true) {\n        context.$$ERROR = reason;\n        return false;\n    }\n\n    return true;\n});\n\nconfig.addValidatorToMap(OP_HAS_KEYS, (left, right) => {\n    if (typeof left !== 'object') {\n        return false;\n    }\n\n    return Array.isArray(right) ? right.every((key) => _has(left, key)) : _has(left, right);\n});\n\nconfig.addValidatorToMap(OP_START_WITH, (left, right) => {\n    if (typeof left !== 'string') {\n        return false;\n    }\n    if (typeof right !== 'string') {\n        throw new Error(MSG.OPERAND_NOT_STRING(ops.START_WITH));\n    }\n\n    return left.startsWith(right);\n});\n\nconfig.addValidatorToMap(OP_END_WITH, (left, right) => {\n    if (typeof left !== 'string') {\n        return false;\n    }\n    if (typeof right !== 'string') {\n        throw new Error(MSG.OPERAND_NOT_STRING(ops.END_WITH));\n    }\n\n    return left.endsWith(right);\n});\n\nconfig.addValidatorToMap(OP_SAME_AS, (left, right, options, context) => {\n    if (typeof left === 'object') {\n        throw new Error(MSG.VALUE_NOT_PRIMITIVE(ops.OP_SAME_AS));\n    }\n    if (typeof right !== 'string') {\n        throw new Error(MSG.OPERAND_NOT_STRING(ops.OP_SAME_AS));\n    }\n\n    return left === context.$$PARENT[right];\n});\n\nexport default validate;\n"]}