{"version":3,"file":"transform.js","names":["MSG","config","messages","PFX_MAP","PFX_REDUCE","applyBinaryOperator","value","op","opValue","context","handler","getTransformer","Error","INVALID_TRANSFORMER_HANDLER","applyUnaryOperator","tag","applyOperator","currentValue","rightValue","isUnary","dev","_isEmpty","RIGHT_OPERAND_NOT_EMPTY","transformCollection","collectionOp","opMeta","expectedFieldValue","Array","isArray","_map","_mapValues","item","key","getChildContext","length","INVALID_COLLECTION_OP_EXPR","ops","REDUCE","_reduce","result","INVALID_COLLECTION_OP","transform","expr","replaceLeft","path","$$ROOT","$$PARENT","$$CURRENT","$$KEY","map","undefined","reduce","exprItem","typeExpr","SYNTAX_NUMBER_AS_EXPR","startsWith","pos","indexOf","_get","substr","getTransformerTagAndType","INVALID_TRANSFORMER_OP","REQUIRE_RIGHT_OPERAND","SYNTAX_INVALID_EXPR","hasOperator","fieldName","l","SYNTAX_OP_NOT_ALONE","substring","complexKey","actualFieldValue","childFieldValue","_set"],"sources":["../src/transform.js"],"sourcesContent":["// JSON Expression Syntax (JES)\nimport _isEmpty from 'lodash/isEmpty';\nimport _reduce from 'lodash/reduce';\nimport _map from 'lodash/map';\nimport _mapValues from 'lodash/mapValues';\n\nimport { get as _get, set as _set } from '@genx/july';\n\nimport config, { getChildContext } from './config';\nimport ops from './transformerOperators';\n\nconst MSG = config.messages;\n\nconst PFX_MAP = '|>'; // map\nconst PFX_REDUCE = '|+'; // reduce 1. intermediate = result op [key, value] 2. result = result op intermediate\n\n/**\n * Apply a bianry operator to a value\n * @param {*} value\n * @param {*} op\n * @param {*} opValue\n * @param {*} context\n * @returns {*}\n */\nfunction applyBinaryOperator(value, op, opValue, context) {\n    const handler = config.getTransformer(op);\n\n    if (!handler) {\n        throw new Error(MSG.INVALID_TRANSFORMER_HANDLER(op));\n    }\n\n    return handler(value, opValue, context);\n}\n\n/**\n * Apply an unary operator to a value\n * @param {*} value\n * @param {*} tag\n * @param {*} context\n * @returns {*}\n */\nfunction applyUnaryOperator(value, tag, context) {\n    const handler = config.getTransformer(tag);\n\n    if (!handler) {\n        throw new Error(MSG.INVALID_TRANSFORMER_HANDLER(tag));\n    }\n\n    return handler(value, context);\n}\n\n/**\n * Apply an operator to a value with operator meta\n * @param {*} currentValue\n * @param {*} rightValue\n * @param {*} opMeta\n * @param {*} context\n * @returns\n */\nfunction applyOperator(currentValue, rightValue, [op, isUnary], context) {\n    if (isUnary) {\n        if (config.dev && !_isEmpty(rightValue)) {\n            throw new Error(MSG.RIGHT_OPERAND_NOT_EMPTY(op));\n        }\n        return applyUnaryOperator(currentValue, op, context);\n    }\n\n    return applyBinaryOperator(currentValue, op, rightValue, context);\n}\n\n/**\n * Apply an collection iteration operator with operator meta\n * @param {*} currentValue\n * @param {*} collectionOp\n * @param {*} opMeta\n * @param {*} expectedFieldValue\n * @param {*} context\n * @returns\n */\nfunction transformCollection(currentValue, collectionOp, opMeta, expectedFieldValue, context) {\n    const isUnary = opMeta[1];\n\n    switch (collectionOp) {\n        case PFX_MAP:\n            return (Array.isArray(currentValue) ? _map : _mapValues)(currentValue, (item, key) =>\n                applyOperator(item, expectedFieldValue, opMeta, getChildContext(context, currentValue, key, item))\n            );\n\n        case PFX_REDUCE:\n            if (\n                !Array.isArray(expectedFieldValue) ||\n                (isUnary && expectedFieldValue.length !== 1) ||\n                (!isUnary && expectedFieldValue.length !== 2)\n            ) {\n                throw new Error(MSG.INVALID_COLLECTION_OP_EXPR(ops.REDUCE, opMeta[0], expectedFieldValue));\n            }\n\n            return _reduce(\n                currentValue,\n                (result, item, key) =>\n                    applyOperator(\n                        result,\n                        expectedFieldValue[1],\n                        opMeta,\n                        getChildContext(context, currentValue, key, item)\n                    ),\n                expectedFieldValue[0]\n            );\n\n        default:\n            throw new Error(MSG.INVALID_COLLECTION_OP(collectionOp));\n    }\n}\n\n/**\n * If $ operator used, only one a time is allowed\n * e.g.\n * {\n *    $groupBy: 'key'\n * }\n *\n *\n * @param {*} currentValue\n * @param {*} expr\n * @param {*} context\n * @param {boolean} replaceLeft - Whether the expression will replace the left value chain,like a setOp\n */\nfunction transform(currentValue, expr, context, replaceLeft) {\n    if (expr == null) {\n        return replaceLeft ? expr : currentValue;\n    }\n\n    if (context == null) {\n        context = {\n            path: null,\n            $$ROOT: currentValue,\n            $$PARENT: null,\n            $$CURRENT: currentValue,\n            $$KEY: null,\n        };\n    }\n\n    if (Array.isArray(expr)) {\n        if (replaceLeft) {\n            return expr.map((item) => transform(undefined, item, { ...context }, true));\n        }\n\n        return expr.reduce((result, exprItem) => transform(result, exprItem, { ...context }), currentValue);\n    }\n\n    const typeExpr = typeof expr;\n\n    if (typeExpr === 'boolean') {\n        if (replaceLeft) {\n            return expr;\n        }\n\n        return expr ? currentValue : undefined;\n    }\n\n    if (typeExpr === 'number' || typeExpr === 'bigint') {\n        if (replaceLeft) {\n            return expr;\n        }\n\n        throw new Error(MSG.SYNTAX_NUMBER_AS_EXPR);\n    }\n\n    if (typeExpr === 'string') {\n        if (expr.startsWith('$$')) {\n            //get from context\n            const pos = expr.indexOf('.');\n            if (pos === -1) {\n                return context[expr];\n            }\n\n            return _get(context[expr.substr(0, pos)], expr.substr(pos + 1));\n        }\n\n        if (replaceLeft) {\n            return expr;\n        }\n\n        const opMeta = config.getTransformerTagAndType(expr);\n        if (!opMeta) {\n            throw new Error(MSG.INVALID_TRANSFORMER_OP(expr));\n        }\n\n        if (!opMeta[1]) {\n            throw new Error(MSG.REQUIRE_RIGHT_OPERAND(expr));\n        }\n\n        return applyUnaryOperator(currentValue, opMeta[0], context);\n    }\n\n    if (typeExpr !== 'object') {\n        throw new Error(MSG.SYNTAX_INVALID_EXPR(expr));\n    }\n\n    if (replaceLeft) {\n        return _mapValues(expr, (item) => transform(undefined, item, context, true));\n    }\n\n    let result,\n        hasOperator = false;\n\n    for (let fieldName in expr) {\n        let expectedFieldValue = expr[fieldName];\n\n        const l = fieldName.length;\n\n        if (l > 1) {\n            if (fieldName[0] === '$') {\n                if (result) {\n                    throw new Error(MSG.SYNTAX_OP_NOT_ALONE);\n                }\n\n                const opMeta = config.getTransformerTagAndType(fieldName);\n                if (!opMeta) {\n                    throw new Error(MSG.INVALID_TRANSFORMER_OP(fieldName));\n                }\n\n                if (hasOperator) {\n                    throw new Error(MSG.SYNTAX_OP_NOT_ALONE);\n                }\n\n                result = applyOperator(currentValue, expectedFieldValue, opMeta, context);\n                hasOperator = true;\n                continue;\n            }\n\n            if (l > 3 && fieldName[0] === '|' && fieldName[2] === '$') {\n                if (result) {\n                    throw new Error(MSG.SYNTAX_OP_NOT_ALONE);\n                }\n\n                const collectionOp = fieldName.substring(0, 2);\n                fieldName = fieldName.substring(2);\n\n                const opMeta = config.getTransformerTagAndType(fieldName);\n                if (!opMeta) {\n                    throw new Error(MSG.INVALID_TRANSFORMER_OP(fieldName));\n                }\n\n                if (hasOperator) {\n                    throw new Error(MSG.SYNTAX_OP_NOT_ALONE);\n                }\n\n                result = transformCollection(currentValue, collectionOp, opMeta, expectedFieldValue, context);\n                hasOperator = true;\n                continue;\n            }\n        }\n\n        if (hasOperator) {\n            throw new Error(MSG.SYNTAX_OP_NOT_ALONE);\n        }\n\n        let complexKey = fieldName.indexOf('.') !== -1;\n\n        //pick a field and then apply manipulation\n        let actualFieldValue =\n            currentValue != null ? (complexKey ? _get(currentValue, fieldName) : currentValue[fieldName]) : undefined;\n\n        const childFieldValue = transform(\n            actualFieldValue,\n            expectedFieldValue,\n            getChildContext(context, currentValue, fieldName, actualFieldValue)\n        );\n\n        if (typeof childFieldValue !== 'undefined') {\n            result == null && (result = {});\n            if (complexKey) {\n                _set(result, fieldName, childFieldValue);\n            } else {\n                result[fieldName] = childFieldValue;\n            }\n        }\n    }\n\n    return result;\n}\n\nexport default transform;\n"],"mappings":"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"}