{"version":3,"file":"transformers.js","names":["MSG","config","messages","UNARY","BINARY","OP_MATCH","ops","MATCH","OP_SIZE","SIZE","OP_SUM","SUM","OP_GET_TYPE","GET_TYPE","OP_GET_BY_INDEX","GET_BY_INDEX","OP_GET_BY_KEY","GET_BY_KEY","OP_FIND","FIND","OP_IF","IF","OP_CAST_ARRAY","CAST_ARRAY","OP_ADD","ADD","OP_SUB","SUB","OP_MUL","MUL","OP_DIV","DIV","OP_MOD","MOD","OP_KEYS","KEYS","OP_VALUES","VALUES","OP_ENTRIES","ENTRIES","OP_OBJ_TO_ARRAY","OBJ_TO_ARRAY","OP_PICK","PICK","OP_OMIT","OMIT","OP_SLICE","SLICE","OP_GROUP","GROUP","OP_SORT","SORT","OP_REVERSE","REVERSE","OP_JOIN","JOIN","OP_MERGE","MERGE","OP_FILTER","FILTER","OP_REMAP","REMAP","OP_TO_JSON","TO_JSON","OP_TO_OBJ","TO_OBJ","OP_SET","SET","OP_ADD_ITEM","ADD_ITEM","OP_ASSIGN","ASSIGN","OP_APPLY","APPLY","OP_INTERPOLATE","INTERPOLATE","matchOptions","throwError","abortEarly","asPredicate","addTransformerToMap","left","right","context","test","validators","_size","_reduce","sum","item","Array","isArray","Number","isInteger","_nth","_get","targetValue","transform","console","log","predicate","value","_isEqual","_findIndex","_findKey","Error","OPERAND_NOT_ARRAY","length","OPERAND_NOT_TUPLE_2_OR_3","condition","_keys","_values","_map","key","v","k","_pick","_pickBy","getChildContext","_omit","_omitBy","VALUE_NOT_ARRAY","slice","INVALID_OP_EXPR","_groupBy","_sortBy","_reverse","join","toString","objectMerger","result","expr","Object","assign","arrayMerger","reduce","VALUE_NOT_COLLECTION","_filter","path","makePath","OPERAND_NOT_TUPLE","remap","isPlainObject","OPERAND_NOT_OBJECT","JSON","stringify","parse","undefined","concat","VALUE_NOT_OBJECT","rightValue","_mapValues","VALUE_NOT_STRING","template"],"sources":["../src/transformers.js"],"sourcesContent":["// JSON Expression Syntax (JES)\nimport _size from 'lodash/size';\nimport _reduce from 'lodash/reduce';\nimport _reverse from 'lodash/reverse';\nimport _keys from 'lodash/keys';\nimport _values from 'lodash/values';\nimport _pick from 'lodash/pick';\nimport _pickBy from 'lodash/pickBy';\nimport _nth from 'lodash/nth';\nimport _omit from 'lodash/omit';\nimport _omitBy from 'lodash/omitBy';\nimport _groupBy from 'lodash/groupBy';\nimport _sortBy from 'lodash/sortBy';\nimport _filter from 'lodash/filter';\nimport _map from 'lodash/map';\nimport _mapValues from 'lodash/mapValues';\nimport _findIndex from 'lodash/findIndex';\nimport _findKey from 'lodash/findKey';\nimport _isEqual from 'lodash/isEqual';\n\nimport { remap, isPlainObject, get as _get, template } from '@genx/july';\n\nimport config, { getChildContext } from './config';\nimport ops from './transformerOperators';\nimport validators from './validateOperators';\nimport { test } from './validate';\nimport './validators';\nimport transform from './transform';\n\nconst MSG = config.messages;\n\nconst UNARY = true;\nconst BINARY = false;\n\n//Query & aggregate operators (pure)\nconst OP_MATCH = [ops.MATCH, BINARY, '$has', '$match', '$all', '$validate', '$when'];\nconst OP_SIZE = [ops.SIZE, UNARY, '$size', '$length', '$count'];\nconst OP_SUM = [ops.SUM, UNARY, '$sum', '$total'];\nconst OP_GET_TYPE = [ops.GET_TYPE, UNARY, '$type'];\nconst OP_GET_BY_INDEX = [ops.GET_BY_INDEX, BINARY, '$at', '$getByIndex', '$nth']; // supports -1 as the last index, -2 the second last\nconst OP_GET_BY_KEY = [ops.GET_BY_KEY, BINARY, '$of', '$valueOf', '$getByKey']; // support key path\nconst OP_FIND = [ops.FIND, BINARY, '$indexOf', '$keyOf'];\nconst OP_IF = [ops.IF, BINARY, '$if'];\nconst OP_CAST_ARRAY = [ops.CAST_ARRAY, UNARY, '$castArray', '$makeArray'];\n\n//Math operators (pure)\nconst OP_ADD = [ops.ADD, BINARY, '$add', '$plus', '$inc'];\nconst OP_SUB = [ops.SUB, BINARY, '$sub', '$subtract', '$minus', '$dec'];\nconst OP_MUL = [ops.MUL, BINARY, '$mul', '$multiply', '$times'];\nconst OP_DIV = [ops.DIV, BINARY, '$div', '$divide'];\nconst OP_MOD = [ops.MOD, BINARY, '$mod', '$remainder'];\n\n//Collection operators (pure)\nconst OP_KEYS = [ops.KEYS, UNARY, '$keys'];\nconst OP_VALUES = [ops.VALUES, UNARY, '$values'];\nconst OP_ENTRIES = [ops.ENTRIES, UNARY, '$entries'];\nconst OP_OBJ_TO_ARRAY = [ops.OBJ_TO_ARRAY, UNARY, '$toArray', '$objectToArray'];\nconst OP_PICK = [ops.PICK, BINARY, '$pick', '$pickBy', '$filterByKeys']; // filter by key\nconst OP_OMIT = [ops.OMIT, BINARY, '$omit', '$omitBy'];\nconst OP_SLICE = [ops.SLICE, BINARY, '$slice', '$limit'];\nconst OP_GROUP = [ops.GROUP, BINARY, '$group', '$groupBy'];\nconst OP_SORT = [ops.SORT, BINARY, '$sort', '$orderBy', '$sortBy'];\nconst OP_REVERSE = [ops.REVERSE, UNARY, '$reverse'];\nconst OP_JOIN = [ops.JOIN, BINARY, '$join'];\nconst OP_MERGE = [ops.MERGE, BINARY, '$merge']; // merge a list of transform result over the value\nconst OP_FILTER = [ops.FILTER, BINARY, '$filter', '$select', '$filterByValue']; // filter by value\nconst OP_REMAP = [ops.REMAP, BINARY, '$remap', '$mapKeys']; // reverse-map, map a key to another name\nconst OP_TO_JSON = [ops.TO_JSON, UNARY, '$json', '$toJSON', '$stringify'];\nconst OP_TO_OBJ = [ops.TO_OBJ, UNARY, '$object', '$toObject', '$parseJSON'];\n\n//Value updater (pure)\nconst OP_SET = [ops.SET, BINARY, '$set', '$=', '$value'];\nconst OP_ADD_ITEM = [ops.ADD_ITEM, BINARY, '$addItem', '$addFields'];\nconst OP_ASSIGN = [ops.ASSIGN, BINARY, '$assign', '$override'];\nconst OP_APPLY = [ops.APPLY, BINARY, '$apply', '$eval']; // to be used in collection\n\n//String manipulate\nconst OP_INTERPOLATE = [ops.INTERPOLATE, BINARY, '$interpolate', '$template'];\n\n// [ <op name>, <unary> ]\n//embeded validators in processing pipeline\nconst matchOptions = { throwError: false, abortEarly: true, asPredicate: true };\n\nconfig.addTransformerToMap(OP_MATCH, (left, right, context) =>\n    test(left, validators.MATCH, right, matchOptions, context)\n);\n\nconfig.addTransformerToMap(OP_SIZE, (left) => _size(left));\n\nconfig.addTransformerToMap(OP_SUM, (left) =>\n    _reduce(\n        left,\n        (sum, item) => {\n            sum += item;\n            return sum;\n        },\n        0\n    )\n);\n\nconfig.addTransformerToMap(OP_GET_TYPE, (left) =>\n    Array.isArray(left) ? 'array' : Number.isInteger(left) ? 'integer' : typeof left\n);\n\nconfig.addTransformerToMap(OP_GET_BY_INDEX, (left, right) => _nth(left, right));\nconfig.addTransformerToMap(OP_GET_BY_KEY, (left, right) => _get(left, right));\n\nconfig.addTransformerToMap(OP_FIND, (left, right, context) => {\n    const targetValue = transform(null, right, context);\n    console.log(left, targetValue, context);\n    const predicate = (value) => _isEqual(value, targetValue);\n    return Array.isArray(left) ? _findIndex(left, predicate) : _findKey(left, predicate);\n});\n\nconfig.addTransformerToMap(OP_IF, (left, right, context) => {\n    if (!Array.isArray(right)) {\n        throw new Error(MSG.OPERAND_NOT_ARRAY(ops.IF));\n    }\n\n    if (right.length < 2 || right.length > 3) {\n        throw new Error(MSG.OPERAND_NOT_TUPLE_2_OR_3(ops.IF));\n    }\n\n    const condition = transform(left, right[0], context);\n\n    if (condition) {\n        return transform(left, right[1], context);\n    } else if (right.length > 2) {\n        return transform(left, right[2], context);\n    }\n\n    return left;\n});\n\nconfig.addTransformerToMap(OP_CAST_ARRAY, (left) => (left == null ? null : Array.isArray(left) ? left : [left]));\n\nconfig.addTransformerToMap(OP_ADD, (left, right) => left + right);\nconfig.addTransformerToMap(OP_SUB, (left, right) => left - right);\nconfig.addTransformerToMap(OP_MUL, (left, right) => left * right);\nconfig.addTransformerToMap(OP_DIV, (left, right) => left / right);\nconfig.addTransformerToMap(OP_MOD, (left, right) => left % right);\n\nconfig.addTransformerToMap(OP_KEYS, (left) => _keys(left));\nconfig.addTransformerToMap(OP_VALUES, (left) => _values(left));\nconfig.addTransformerToMap(OP_ENTRIES, (left) => _map(left, (value, key) => [key, value]));\nconfig.addTransformerToMap(OP_OBJ_TO_ARRAY, (left) => _map(left, (v, k) => ({ k, v })));\n\nconfig.addTransformerToMap(OP_PICK, (left, right, context) => {\n    if (left == null) {\n        return null;\n    }\n\n    if (typeof right !== 'object') {\n        right = [right];\n    }\n\n    if (Array.isArray(right)) {\n        return _pick(left, right);\n    }\n\n    return _pickBy(left, (item, key) =>\n        test(key, validators.MATCH, right, matchOptions, getChildContext(context, left, key, item))\n    );\n});\n\nconfig.addTransformerToMap(OP_OMIT, (left, right, context) => {\n    if (left == null) {\n        return null;\n    }\n\n    if (typeof right !== 'object') {\n        right = [right];\n    }\n\n    if (Array.isArray(right)) {\n        return _omit(left, right);\n    }\n\n    return _omitBy(left, (item, key) =>\n        test(key, validators.MATCH, right, matchOptions, getChildContext(context, left, key, item))\n    );\n});\n\nconfig.addTransformerToMap(OP_SLICE, (left, right) => {\n    if (left == null) {\n        return null;\n    }\n\n    if (!Array.isArray(left)) {\n        return new Error(MSG.VALUE_NOT_ARRAY(ops.SLICE));\n    }\n\n    if (Number.isInteger(right)) {\n        return left.slice(right);\n    }\n\n    if (Array.isArray(right)) {\n        if (right.length === 0 || right.length > 2) {\n            return new Error(MSG.INVALID_OP_EXPR(ops.SLICE, right));\n        }\n\n        return left.slice(...right);\n    }\n\n    return new Error(MSG.INVALID_OP_EXPR(ops.SLICE, right));\n});\n\nconfig.addTransformerToMap(OP_GROUP, (left, right) => _groupBy(left, right));\nconfig.addTransformerToMap(OP_SORT, (left, right) => _sortBy(left, right));\nconfig.addTransformerToMap(OP_REVERSE, (left) => _reverse(left));\n\nconfig.addTransformerToMap(OP_JOIN, (left, right) => {\n    if (left == null) {\n        return null;\n    }\n    if (!Array.isArray(left)) {\n        throw new Error(MSG.VALUE_NOT_ARRAY(ops.JOIN));\n    }\n\n    return left.join(right.toString());\n});\n\nconst objectMerger = (left, context) => [(result, expr) => Object.assign(result, transform(left, expr, context)), {}];\n\nconst arrayMerger = (left, context) => [(result, expr) => [...result, ...transform(left, expr, context)], []];\n\nconfig.addTransformerToMap(OP_MERGE, (left, right, context) => {\n    if (!Array.isArray(right)) {\n        throw new Error(MSG.OPERAND_NOT_ARRAY(ops.MERGE));\n    }\n\n    return right.reduce(...(Array.isArray(left) ? arrayMerger(left, context) : objectMerger(left, context)));\n});\n\nconfig.addTransformerToMap(OP_FILTER, (left, right, context) => {\n    if (left == null) {\n        return null;\n    }\n\n    if (typeof left !== 'object') {\n        throw new Error(MSG.VALUE_NOT_COLLECTION(ops.FILTER));\n    }\n\n    return _filter(left, (value, key) =>\n        test(value, validators.MATCH, right, matchOptions, {\n            path: MSG.makePath(key, context.path),\n        })\n    );\n});\nconfig.addTransformerToMap(OP_REMAP, (left, right) => {\n    if (left == null) {\n        return null;\n    }\n\n    if (typeof left !== 'object') {\n        throw new Error(MSG.VALUE_NOT_COLLECTION(ops.REMAP));\n    }\n\n    if (Array.isArray(right)) {\n        if (right.length !== 2) {\n            throw new Error(MSG.OPERAND_NOT_TUPLE(ops.REMAP));\n        }\n\n        return remap(left, right[0], right[1]);\n    }\n\n    if (!isPlainObject(right)) {\n        throw new Error(MSG.OPERAND_NOT_OBJECT(ops.REMAP));\n    }\n\n    return remap(left, right);\n});\n\nconfig.addTransformerToMap(OP_TO_JSON, (left) => (left == null ? left : JSON.stringify(left)));\nconfig.addTransformerToMap(OP_TO_OBJ, (left) => (left == null ? left : JSON.parse(left)));\n\nconfig.addTransformerToMap(OP_SET, (left, right, context) => transform(undefined, right, context, true));\nconfig.addTransformerToMap(OP_ADD_ITEM, (left, right, context) => {\n    if (typeof left !== 'object') {\n        throw new Error(MSG.VALUE_NOT_COLLECTION(ops.ADD_ITEM));\n    }\n\n    if (Array.isArray(left)) {\n        return left.concat(transform(left, right, context));\n    }\n\n    if (!Array.isArray(right) || right.length !== 2) {\n        throw new Error(MSG.OPERAND_NOT_TUPLE(ops.ADD_ITEM));\n    }\n\n    return {\n        ...left,\n        [right[0]]: transform(left, right[1], context),\n    };\n});\nconfig.addTransformerToMap(OP_ASSIGN, (left, right, context) => {\n    if (!isPlainObject(left)) {\n        if (left == null) {\n            left = {};\n        } else {\n            throw new Error(MSG.VALUE_NOT_OBJECT(ops.ASSIGN));\n        }\n    }\n\n    if (!isPlainObject(right)) {\n        throw new Error(MSG.OPERAND_NOT_OBJECT(ops.ASSIGN));\n    }\n\n    const rightValue = _mapValues(right, (expr, key) =>\n        transform(left[key], expr, getChildContext(context, left, key, left[key]))\n    );\n\n    return { ...left, ...rightValue };\n});\n\nconfig.addTransformerToMap(OP_APPLY, transform);\n\nconfig.addTransformerToMap(OP_INTERPOLATE, (left, right) => {\n    if (typeof left !== 'string') {\n        throw new Error(MSG.VALUE_NOT_STRING(ops.INTERPOLATE));\n    }\n\n    if (right != null && typeof right !== 'object') {\n        throw new Error(MSG.OPERAND_NOT_OBJECT(ops.INTERPOLATE));\n    }\n\n    return template(left, right);\n});\n\nexport default transform;\n"],"mappings":"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"}