{"version":3,"file":"index.js","names":["types","ARRAY","BOOLEAN","DATETIME","INTEGER","NUMBER","OBJECT","TEXT","Types","Builtin","Set","addType","name","type","has","Error","add","_each","alias","forEach","a"],"sources":["../../src/types/index.js"],"sourcesContent":["import _each from 'lodash/each';\n\nimport ARRAY from './array';\nimport BOOLEAN from './boolean';\nimport DATETIME from './datetime';\nimport INTEGER from './integer';\nimport NUMBER from './number';\nimport OBJECT from './object';\nimport TEXT from './text';\n\nconst types = {\n    ARRAY,\n    BOOLEAN,\n    DATETIME,\n    INTEGER,\n    NUMBER,\n    OBJECT,\n    TEXT,\n};\n\nconst Types = {\n    ...types,\n    Builtin: new Set(),\n};\n\nconst addType = (name, type) => {\n    if (Types.Builtin.has(type)) {\n        throw new Error(`Type name or alias \"${name}\" has been used.`);\n    }\n\n    Types[name] = type;\n    Types.Builtin.add(name);\n};\n\n_each(types, (type) => {\n    addType(type.name, type);\n\n    type.alias && type.alias.forEach((a) => addType(a, type));\n});\n\nexport default Types;\n"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;AAEA,IAAMA,KAAK,GAAG;EACVC,KAAK,EAALA,iBADU;EAEVC,OAAO,EAAPA,mBAFU;EAGVC,QAAQ,EAARA,oBAHU;EAIVC,OAAO,EAAPA,mBAJU;EAKVC,MAAM,EAANA,kBALU;EAMVC,MAAM,EAANA,kBANU;EAOVC,IAAI,EAAJA;AAPU,CAAd;;AAUA,IAAMC,KAAK,mCACJR,KADI;EAEPS,OAAO,EAAE,IAAIC,GAAJ;AAFF,EAAX;;AAKA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD,EAAOC,IAAP,EAAgB;EAC5B,IAAIL,KAAK,CAACC,OAAN,CAAcK,GAAd,CAAkBD,IAAlB,CAAJ,EAA6B;IACzB,MAAM,IAAIE,KAAJ,gCAAiCH,IAAjC,uBAAN;EACH;;EAEDJ,KAAK,CAACI,IAAD,CAAL,GAAcC,IAAd;EACAL,KAAK,CAACC,OAAN,CAAcO,GAAd,CAAkBJ,IAAlB;AACH,CAPD;;AASA,IAAAK,iBAAA,EAAMjB,KAAN,EAAa,UAACa,IAAD,EAAU;EACnBF,OAAO,CAACE,IAAI,CAACD,IAAN,EAAYC,IAAZ,CAAP;EAEAA,IAAI,CAACK,KAAL,IAAcL,IAAI,CAACK,KAAL,CAAWC,OAAX,CAAmB,UAACC,CAAD;IAAA,OAAOT,OAAO,CAACS,CAAD,EAAIP,IAAJ,CAAd;EAAA,CAAnB,CAAd;AACH,CAJD;eAMeL,K"}