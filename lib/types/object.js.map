{"version":3,"file":"object.js","names":["validateBySchema","value","schema","options","useFieldPath","abortEarly","throwError","context","mapOfNames","invalidType","errors","_options","_find","validationObject","fieldName","fieldValue","_get","reason","validate","path","messages","makePath","$$PARENT","$$CURRENT","ValidationError","push","length","name","alias"],"sources":["../../src/types/object.js"],"sourcesContent":["import _find from 'lodash/find';\nimport { get as _get } from '@genx/july';\n\nimport ValidationError from '../ValidationError';\nimport { messages } from '../config';\nimport validate, { invalidType } from '../validate';\n\nexport function validateBySchema(\n    value,\n    schema,\n    options = { useFieldPath: true, abortEarly: true, throwError: true },\n    context = {}\n) {\n    const { useFieldPath, abortEarly, throwError, mapOfNames } = options;\n\n    if (value != null && typeof value !== 'object') {\n        return invalidType(value, 'object', options, context);\n    }\n\n    if (typeof schema === 'function') {\n        // use deferred activation of schema to avoid circullar reference\n        schema = schema();\n    }\n\n    const errors = [];\n    const _options = !abortEarly && throwError ? { ...options, throwError: false } : options;\n\n    _find(schema, (validationObject, fieldName) => {\n        const fieldValue = useFieldPath ? _get(value, fieldName) : value?.[fieldName];\n        const reason = validate(fieldValue, validationObject, _options, {\n            path: messages.makePath(mapOfNames?.[fieldName] ?? fieldName, context.path),\n            $$PARENT: value,\n            $$CURRENT: fieldValue,\n        });\n\n        if (reason !== true) {\n            if (abortEarly && throwError) {\n                throw new ValidationError(reason, fieldValue, fieldName);\n            }\n\n            errors.push(...reason);\n            return abortEarly;\n        }\n\n        return false;\n    });\n\n    if (errors.length > 0) {\n        if (throwError) {\n            throw new ValidationError(errors, value, context.path);\n        }\n\n        return errors;\n    }\n\n    return true;\n}\n\nexport default {\n    name: 'object',\n\n    alias: ['json'],\n\n    validate: validateBySchema,\n};\n"],"mappings":";;;;;;;;AAAA;;AACA;;AAEA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEO,SAASA,gBAAT,CACHC,KADG,EAEHC,MAFG,EAKL;EAAA,IAFEC,OAEF,uEAFY;IAAEC,YAAY,EAAE,IAAhB;IAAsBC,UAAU,EAAE,IAAlC;IAAwCC,UAAU,EAAE;EAApD,CAEZ;EAAA,IADEC,OACF,uEADY,EACZ;EACE,IAAQH,YAAR,GAA6DD,OAA7D,CAAQC,YAAR;EAAA,IAAsBC,UAAtB,GAA6DF,OAA7D,CAAsBE,UAAtB;EAAA,IAAkCC,UAAlC,GAA6DH,OAA7D,CAAkCG,UAAlC;EAAA,IAA8CE,UAA9C,GAA6DL,OAA7D,CAA8CK,UAA9C;;EAEA,IAAIP,KAAK,IAAI,IAAT,IAAiB,QAAOA,KAAP,MAAiB,QAAtC,EAAgD;IAC5C,OAAO,IAAAQ,qBAAA,EAAYR,KAAZ,EAAmB,QAAnB,EAA6BE,OAA7B,EAAsCI,OAAtC,CAAP;EACH;;EAED,IAAI,OAAOL,MAAP,KAAkB,UAAtB,EAAkC;IAC9B;IACAA,MAAM,GAAGA,MAAM,EAAf;EACH;;EAED,IAAMQ,MAAM,GAAG,EAAf;;EACA,IAAMC,QAAQ,GAAG,CAACN,UAAD,IAAeC,UAAf,mCAAiCH,OAAjC;IAA0CG,UAAU,EAAE;EAAtD,KAAgEH,OAAjF;;EAEA,IAAAS,iBAAA,EAAMV,MAAN,EAAc,UAACW,gBAAD,EAAmBC,SAAnB,EAAiC;IAAA;;IAC3C,IAAMC,UAAU,GAAGX,YAAY,GAAG,IAAAY,SAAA,EAAKf,KAAL,EAAYa,SAAZ,CAAH,GAA4Bb,KAA5B,aAA4BA,KAA5B,uBAA4BA,KAAK,CAAGa,SAAH,CAAhE;IACA,IAAMG,MAAM,GAAG,IAAAC,oBAAA,EAASH,UAAT,EAAqBF,gBAArB,EAAuCF,QAAvC,EAAiD;MAC5DQ,IAAI,EAAEC,gBAAA,CAASC,QAAT,0BAAkBb,UAAlB,aAAkBA,UAAlB,uBAAkBA,UAAU,CAAGM,SAAH,CAA5B,yEAA6CA,SAA7C,EAAwDP,OAAO,CAACY,IAAhE,CADsD;MAE5DG,QAAQ,EAAErB,KAFkD;MAG5DsB,SAAS,EAAER;IAHiD,CAAjD,CAAf;;IAMA,IAAIE,MAAM,KAAK,IAAf,EAAqB;MACjB,IAAIZ,UAAU,IAAIC,UAAlB,EAA8B;QAC1B,MAAM,IAAIkB,2BAAJ,CAAoBP,MAApB,EAA4BF,UAA5B,EAAwCD,SAAxC,CAAN;MACH;;MAEDJ,MAAM,CAACe,IAAP,OAAAf,MAAM,qBAASO,MAAT,EAAN;MACA,OAAOZ,UAAP;IACH;;IAED,OAAO,KAAP;EACH,CAlBD;;EAoBA,IAAIK,MAAM,CAACgB,MAAP,GAAgB,CAApB,EAAuB;IACnB,IAAIpB,UAAJ,EAAgB;MACZ,MAAM,IAAIkB,2BAAJ,CAAoBd,MAApB,EAA4BT,KAA5B,EAAmCM,OAAO,CAACY,IAA3C,CAAN;IACH;;IAED,OAAOT,MAAP;EACH;;EAED,OAAO,IAAP;AACH;;eAEc;EACXiB,IAAI,EAAE,QADK;EAGXC,KAAK,EAAE,CAAC,MAAD,CAHI;EAKXV,QAAQ,EAAElB;AALC,C"}