{"version":3,"file":"validators.js","names":["MSG","config","messages","OP_EQUAL","ops","EQUAL","OP_NOT_EQUAL","NOT_EQUAL","OP_NOT","NOT","OP_GREATER_THAN","GREATER_THAN","OP_GREATER_THAN_OR_EQUAL","GREATER_THAN_OR_EQUAL","OP_LESS_THAN","LESS_THAN","OP_LESS_THAN_OR_EQUAL","LESS_THAN_OR_EQUAL","OP_LENGTH","LENGTH","OP_IN","IN","OP_NOT_IN","NOT_IN","OP_EXISTS","EXISTS","OP_MATCH","MATCH","OP_MATCH_ANY","MATCH_ANY","OP_ALL_MATCH","ALL_MATCH","OP_ANY_ONE_MATCH","ANY_ONE_MATCH","OP_TYPE","TYPE","OP_HAS_KEYS","HAS_KEYS","OP_START_WITH","START_WITH","OP_END_WITH","END_WITH","OP_SAME_AS","SAME_AS","addValidatorToMap","left","right","_isEqual","args","test","options","context","_size","isPlainObject","transform","undefined","Array","isArray","Error","OPERAND_NOT_ARRAY","equal","getValidator","find","element","notEqual","every","OPERAND_NOT_BOOL","errors","rule","reason","validate","asPredicate","push","_castArray","abortEarly","length","throwError","ValidationError","path","$$ERROR","plainError","reason2","found","validationErrors","name","VALUE_NOT_ARRAY","leftItem","type","schema","INVALID_OP_EXPR","Types","Builtin","has","UNSUPPORTED_TYPE","key","_has","OPERAND_NOT_STRING","startsWith","endsWith","VALUE_NOT_PRIMITIVE","$$PARENT"],"sources":["../src/validators.js"],"sourcesContent":["// JSON Expression Syntax (JES) for validation\nimport _isEqual from 'lodash/isEqual';\nimport _has from 'lodash/has';\nimport _size from 'lodash/size';\nimport _castArray from 'lodash/castArray';\n\nimport ValidationError from './ValidationError';\nimport validate, { test } from './validate';\n\nimport config from './config';\nimport Types from './types';\nimport ops from './validateOperators';\nimport { isPlainObject } from '@genx/july';\nimport transform from './transform';\n\nconst MSG = config.messages;\n\n//Validators [ name, ...operator alias ]\nconst OP_EQUAL = [ops.EQUAL, '$eq', '$eql', '$equal', '$being'];\nconst OP_NOT_EQUAL = [ops.NOT_EQUAL, '$ne', '$neq', '$notEqual'];\nconst OP_NOT = [ops.NOT, '$not'];\nconst OP_GREATER_THAN = [ops.GREATER_THAN, '$gt', '$>', '$greaterThan'];\nconst OP_GREATER_THAN_OR_EQUAL = [ops.GREATER_THAN_OR_EQUAL, '$gte', '$>=', '$greaterThanOrEqual', '$min'];\nconst OP_LESS_THAN = [ops.LESS_THAN, '$lt', '$<', '$lessThan'];\nconst OP_LESS_THAN_OR_EQUAL = [ops.LESS_THAN_OR_EQUAL, '$lte', '$<=', '$lessThanOrEqual', '$max'];\nconst OP_LENGTH = [ops.LENGTH, '$length', '$size', '$capacity'];\nconst OP_IN = [ops.IN, '$in'];\nconst OP_NOT_IN = [ops.NOT_IN, '$nin', '$notIn'];\nconst OP_EXISTS = [ops.EXISTS, '$exist', '$exists', '$notNull', '$required'];\nconst OP_MATCH = [ops.MATCH, '$has', '$match', '$all'];\nconst OP_MATCH_ANY = [ops.MATCH_ANY, '$any', '$or', '$either'];\nconst OP_ALL_MATCH = [ops.ALL_MATCH, '$allMatch', '|>$all', '|>$match'];\nconst OP_ANY_ONE_MATCH = [ops.ANY_ONE_MATCH, '$anyOneMatch', '|*$any', '|*$match', '|*$either'];\nconst OP_TYPE = [ops.TYPE, '$is', '$typeOf'];\nconst OP_HAS_KEYS = [ops.HAS_KEYS, '$hasKey', '$hasKeys', '$withKey', '$withKeys'];\nconst OP_START_WITH = [ops.START_WITH, '$startWith', '$startsWith'];\nconst OP_END_WITH = [ops.END_WITH, '$endWith', '$endsWith'];\nconst OP_SAME_AS = [ops.SAME_AS, '$sameAs'];\n\nconfig.addValidatorToMap(OP_EQUAL, (left, right) => _isEqual(left, right));\nconfig.addValidatorToMap(OP_NOT_EQUAL, (left, right) => !_isEqual(left, right));\nconfig.addValidatorToMap(OP_NOT, (left, ...args) => !test(left, ops.MATCH, ...args));\nconfig.addValidatorToMap(OP_GREATER_THAN, (left, right) => left > right);\nconfig.addValidatorToMap(OP_GREATER_THAN_OR_EQUAL, (left, right) => left >= right);\nconfig.addValidatorToMap(OP_LESS_THAN, (left, right) => left < right);\nconfig.addValidatorToMap(OP_LESS_THAN_OR_EQUAL, (left, right) => left <= right);\nconfig.addValidatorToMap(OP_LENGTH, (left, right, options, context) =>\n    test(_size(left), ops.MATCH, right, options, context)\n);\n\nconfig.addValidatorToMap(OP_IN, (left, right, options, context) => {\n    if (right == null) {\n        return false;\n    }\n\n    if (typeof right === 'string' || isPlainObject(right)) {\n        right = transform(undefined, right, context, true);\n    }\n\n    if (!Array.isArray(right)) {\n        throw new Error(MSG.OPERAND_NOT_ARRAY(ops.IN));\n    }\n\n    const equal = config.getValidator(ops.EQUAL);\n    return right.find((element) => equal(left, element));\n});\n\nconfig.addValidatorToMap(OP_NOT_IN, (left, right) => {\n    if (right == null) {\n        return true;\n    }\n    if (!Array.isArray(right)) {\n        throw new Error(MSG.OPERAND_NOT_ARRAY(ops.NOT_IN));\n    }\n\n    const notEqual = config.getValidator(ops.NOT_EQUAL);\n\n    return right.every((element) => notEqual(left, element));\n});\n\nconfig.addValidatorToMap(OP_EXISTS, (left, right) => {\n    if (typeof right !== 'boolean') {\n        throw new Error(MSG.OPERAND_NOT_BOOL(ops.EXISTS));\n    }\n\n    return right ? left != null : left == null;\n});\n\nconfig.addValidatorToMap(OP_MATCH, (left, right, options, context) => {\n    if (Array.isArray(right)) {\n        const errors = [];\n\n        right.every((rule) => {\n            const reason = validate(left, rule, { ...options, asPredicate: false }, context);\n            if (reason !== true) {\n                errors.push(..._castArray(reason));\n\n                if (options.abortEarly) {\n                    return false;\n                }\n            }\n\n            return true;\n        });\n\n        if (errors.length > 0) {\n            if (options.throwError) {\n                throw new ValidationError(errors, left, context.path);\n            }\n\n            if (!options.asPredicate) {\n                context.$$ERROR = errors.length === 1 && options.plainError ? errors[0] : errors;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    const reason2 = validate(left, right, options, context);\n    if (reason2 !== true) {\n        if (!options.asPredicate) {\n            context.$$ERROR = reason2;\n        }\n\n        return false;\n    }\n\n    return true;\n});\n\nconfig.addValidatorToMap(OP_MATCH_ANY, (left, right, options, context) => {\n    if (!Array.isArray(right)) {\n        throw new Error(MSG.OPERAND_NOT_ARRAY(ops.MATCH_ANY));\n    }\n\n    let found = right.find((rule) => {\n        const reason = validate(left, rule, { ...options, abortEarly: false, throwError: false }, context);\n        return reason === true;\n    });\n\n    if (!found) {\n        context.$$ERROR = MSG.validationErrors[ops.MATCH_ANY](context.name, left, right, context);\n    }\n\n    return found ? true : false;\n});\n\nconfig.addValidatorToMap(OP_ALL_MATCH, (left, right, options, context) => {\n    if (!Array.isArray(left)) {\n        throw new Error(MSG.VALUE_NOT_ARRAY(ops.ALL_MATCH));\n    }\n\n    const errors = [];\n\n    left.every((leftItem) => {\n        const reason = validate(leftItem, right, { ...options, asPredicate: false }, context);\n        if (reason !== true) {\n            errors.push(MSG.validationErrors[ops.ALL_MATCH](context.name, left, right, context), ..._castArray(reason));\n\n            if (options.abortEarly) {\n                return false;\n            }\n        }\n\n        return true;\n    });\n\n    if (errors.length > 0) {\n        if (options.throwError) {\n            throw new ValidationError(errors, left, context.path);\n        }\n\n        if (!options.asPredicate) {\n            context.$$ERROR = errors.length === 1 && options.plainError ? errors[0] : errors;\n        }\n\n        return false;\n    }\n\n    return true;\n});\n\nconfig.addValidatorToMap(OP_ANY_ONE_MATCH, (left, right, options, context) => {\n    if (!Array.isArray(left)) {\n        throw new Error(MSG.VALUE_NOT_ARRAY(ops.ANY_ONE_MATCH));\n    }\n\n    let found = left.find((leftItem) => {\n        const reason = validate(leftItem, right, { ...options, abortEarly: false, throwError: false }, context);\n        return reason === true;\n    });\n\n    if (!found) {\n        context.$$ERROR = MSG.validationErrors[ops.ANY_ONE_MATCH](context.name, left, right, context);\n    }\n\n    return found ? true : false;\n});\n\nconfig.addValidatorToMap(OP_TYPE, (left, right, options, context) => {\n    let type;\n    let schema;\n\n    if (Array.isArray(right)) {\n        if (right.length === 0) {\n            throw new Error(MSG.INVALID_OP_EXPR(OP_TYPE[0], right));\n        }\n\n        type = right[0];\n        if (right.length > 1) {\n            schema = right[1];\n        }\n    } else if (typeof right === 'string') {\n        type = right;\n    } else if (typeof right === 'object') {\n        type = right.type;\n        schema = right.schema;\n    }\n\n    if (!Types.Builtin.has(type)) {\n        throw new Error(MSG.UNSUPPORTED_TYPE(type));\n    }\n\n    const reason = Types[type].validate(left, schema, options, context);\n    if (reason !== true) {\n        context.$$ERROR = reason;\n        return false;\n    }\n\n    return true;\n});\n\nconfig.addValidatorToMap(OP_HAS_KEYS, (left, right) => {\n    if (typeof left !== 'object') {\n        return false;\n    }\n\n    return Array.isArray(right) ? right.every((key) => _has(left, key)) : _has(left, right);\n});\n\nconfig.addValidatorToMap(OP_START_WITH, (left, right) => {\n    if (typeof left !== 'string') {\n        return false;\n    }\n    if (typeof right !== 'string') {\n        throw new Error(MSG.OPERAND_NOT_STRING(ops.START_WITH));\n    }\n\n    return left.startsWith(right);\n});\n\nconfig.addValidatorToMap(OP_END_WITH, (left, right) => {\n    if (typeof left !== 'string') {\n        return false;\n    }\n    if (typeof right !== 'string') {\n        throw new Error(MSG.OPERAND_NOT_STRING(ops.END_WITH));\n    }\n\n    return left.endsWith(right);\n});\n\nconfig.addValidatorToMap(OP_SAME_AS, (left, right, options, context) => {\n    if (typeof left === 'object') {\n        throw new Error(MSG.VALUE_NOT_PRIMITIVE(ops.OP_SAME_AS));\n    }\n    if (typeof right !== 'string') {\n        throw new Error(MSG.OPERAND_NOT_STRING(ops.OP_SAME_AS));\n    }\n\n    return left === context.$$PARENT[right];\n});\n\nexport default validate;\n"],"mappings":"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"}